// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Network not render a network 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 0,
          "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
        },
        "status": Object {
          "online": true,
        },
      }
    }
    showNetworkIndicator={false}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 0,
          "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
        },
        "status": Object {
          "online": true,
        },
      },
      "showNetworkIndicator": false,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status online"
        />
        <p>
          Connected to:
          <span>
            mainnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status online"
          />
          <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status online"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status online",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                mainnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                mainnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mainnet",
              },
              "ref": null,
              "rendered": Array [
                "mainnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 0,
            "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
          },
          "status": Object {
            "online": true,
          },
        },
        "showNetworkIndicator": false,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status online"
          />
          <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status online"
            />
            <p>
              Connected to:
              <span>
                mainnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status online"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status online",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                mainnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  mainnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  mainnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "mainnet",
                },
                "ref": null,
                "rendered": Array [
                  "mainnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Network renders nethash option as DEVNET 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": false,
        },
      }
    }
    showNetworkIndicator={true}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": false,
        },
      },
      "showNetworkIndicator": true,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status offline"
        />
        <p>
          Connected to:
          <span>
            devnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status offline"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status offline"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status offline",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                devnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                devnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "devnet",
              },
              "ref": null,
              "rendered": Array [
                "devnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 2,
            "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
          },
          "status": Object {
            "online": false,
          },
        },
        "showNetworkIndicator": true,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status offline"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status offline"
            />
            <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status offline"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status offline",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  devnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  devnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "devnet",
                },
                "ref": null,
                "rendered": Array [
                  "devnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Network renders nethash option as MAINNET 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511",
        },
        "status": Object {
          "online": true,
        },
      }
    }
    showNetworkIndicator={true}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511",
        },
        "status": Object {
          "online": true,
        },
      },
      "showNetworkIndicator": true,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status online"
        />
        <p>
          Connected to:
          <span>
            mainnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status online"
          />
          <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status online"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status online",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                mainnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                mainnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mainnet",
              },
              "ref": null,
              "rendered": Array [
                "mainnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 2,
            "nethash": "ed14889723f24ecc54871d058d98ce91ff2f973192075c0155ba2b7b70ad2511",
          },
          "status": Object {
            "online": true,
          },
        },
        "showNetworkIndicator": true,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status online"
          />
          <p>
            Connected to:
            <span>
              mainnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status online"
            />
            <p>
              Connected to:
              <span>
                mainnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status online"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status online",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                mainnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  mainnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  mainnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "mainnet",
                },
                "ref": null,
                "rendered": Array [
                  "mainnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Network renders nethash option as TESTNET 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
        },
        "status": Object {
          "online": true,
        },
      }
    }
    showNetworkIndicator={true}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
        },
        "status": Object {
          "online": true,
        },
      },
      "showNetworkIndicator": true,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status online"
        />
        <p>
          Connected to:
          <span>
            testnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status online"
          />
          <p>
            Connected to:
            <span>
              testnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status online"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status online",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              testnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                testnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                testnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "testnet",
              },
              "ref": null,
              "rendered": Array [
                "testnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 2,
            "nethash": "da3ed6a45429278bac2666961289ca17ad86595d33b31037615d4b8e8f158bba",
          },
          "status": Object {
            "online": true,
          },
        },
        "showNetworkIndicator": true,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status online"
          />
          <p>
            Connected to:
            <span>
              testnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status online"
            />
            <p>
              Connected to:
              <span>
                testnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status online"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status online",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                testnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  testnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  testnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "testnet",
                },
                "ref": null,
                "rendered": Array [
                  "testnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Network renders status OFFLINE 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": false,
        },
      }
    }
    showNetworkIndicator={true}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": false,
        },
      },
      "showNetworkIndicator": true,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status offline"
        />
        <p>
          Connected to:
          <span>
            devnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status offline"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status offline"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status offline",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                devnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                devnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "devnet",
              },
              "ref": null,
              "rendered": Array [
                "devnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 2,
            "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
          },
          "status": Object {
            "online": false,
          },
        },
        "showNetworkIndicator": true,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status offline"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status offline"
            />
            <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status offline"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status offline",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  devnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  devnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "devnet",
                },
                "ref": null,
                "rendered": Array [
                  "devnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Network renders status ONLINE 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <Network
    peers={
      Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": true,
        },
      }
    }
    showNetworkIndicator={true}
    t={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "peers": Object {
        "liskAPIClient": Object {},
        "options": Object {
          "code": 2,
          "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
        },
        "status": Object {
          "online": true,
        },
      },
      "showNetworkIndicator": true,
      "t": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": <section
        class="wrapper network-status"
      >
        <span
          class="status online"
        />
        <p>
          Connected to:
          <span>
            devnet
          </span>
          <span
            class="peer"
          />
        </p>
      </section>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <span
            className="status online"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              className="peer"
            />
          </p>
        </React.Fragment>,
        "className": "wrapper network-status",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <span
            class="status online"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "status online",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "span",
        },
        Object {
          "instance": <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Connected to:",
              <span>
                devnet
              </span>,
              <span
                className="peer"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Connected to:",
            Object {
              "instance": <span>
                devnet
              </span>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "devnet",
              },
              "ref": null,
              "rendered": Array [
                "devnet",
              ],
              "type": "span",
            },
            Object {
              "instance": <span
                class="peer"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "peer",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "span",
            },
          ],
          "type": "p",
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "peers": Object {
          "liskAPIClient": Object {},
          "options": Object {
            "code": 2,
            "nethash": "198f2b61a8eb95fbeed58b8216780b68f697f26b849acf00c8c93bb9b24f783d",
          },
          "status": Object {
            "online": true,
          },
        },
        "showNetworkIndicator": true,
        "t": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": <section
          class="wrapper network-status"
        >
          <span
            class="status online"
          />
          <p>
            Connected to:
            <span>
              devnet
            </span>
            <span
              class="peer"
            />
          </p>
        </section>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <React.Fragment>
            <span
              className="status online"
            />
            <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                className="peer"
              />
            </p>
          </React.Fragment>,
          "className": "wrapper network-status",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <span
              class="status online"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "status online",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "span",
          },
          Object {
            "instance": <p>
              Connected to:
              <span>
                devnet
              </span>
              <span
                class="peer"
              />
            </p>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Connected to:",
                <span>
                  devnet
                </span>,
                <span
                  className="peer"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Connected to:",
              Object {
                "instance": <span>
                  devnet
                </span>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "devnet",
                },
                "ref": null,
                "rendered": Array [
                  "devnet",
                ],
                "type": "span",
              },
              Object {
                "instance": <span
                  class="peer"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "peer",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "span",
              },
            ],
            "type": "p",
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
