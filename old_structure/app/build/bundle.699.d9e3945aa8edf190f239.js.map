{"version":3,"sources":["webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://Lisk/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://Lisk/./node_modules/@babel/runtime/regenerator/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/account.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/api_client.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/block.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/codec.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/create_clients.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/ipc_channel.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/node.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/transaction.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/utils.js","webpack://Lisk/./node_modules/@liskhq/lisk-api-client/dist-node/ws_channel.js","webpack://Lisk/./node_modules/@liskhq/lisk-client/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/boolean.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/bytes.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/codec.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/collection.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/json_wrapper.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/keys.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/string.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/utils/default_value.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/utils/find_path.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/utils/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/utils/key.js","webpack://Lisk/./node_modules/@liskhq/lisk-codec/dist-node/varint.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/buffer.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/constants.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/convert.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/encrypt.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/hash.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/hash_onion.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/keys.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/legacy_address.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/nacl/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/nacl/slow.js","webpack://Lisk/./node_modules/@liskhq/lisk-cryptography/dist-node/sign.js","webpack://Lisk/./node_modules/@liskhq/lisk-passphrase/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-passphrase/dist-node/validation.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/fee.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/format.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/schema.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/sign.js","webpack://Lisk/./node_modules/@liskhq/lisk-transactions/dist-node/validate.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/constants.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/merkle_tree.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/types.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/utils.js","webpack://Lisk/./node_modules/@liskhq/lisk-tree/dist-node/verify_proof.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/buffer_map.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/buffer_set.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/buffer_string.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/max_heap.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/min_heap.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/data_structures/node.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/job_handlers/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/job_handlers/mutex.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/job_handlers/scheduler.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/objects/buffer_array.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/objects/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-utils/dist-node/objects/merge_deep.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/constants.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/errors.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/formats.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/index.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/keywords/data_type.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/keywords/field_number.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/lisk_meta_schema.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/lisk_validator.js","webpack://Lisk/./node_modules/@liskhq/lisk-validator/dist-node/validation.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_extends","assign","arguments","source","hasOwnProperty","call","apply","this","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","constructor","_inheritsLoose","_objectSpread","ownKeys","keys","getOwnPropertySymbols","push","filter","sym","getOwnPropertyDescriptor","forEach","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_possibleConstructorReturn","_setPrototypeOf","p","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","iter","from","_typeof","_unsupportedIterableToArray","minLen","n","toString","slice","name","test","module","exports","Account","lisk_codec_1","channel","schemas","_channel","_schemas","async","address","addressString","Buffer","isBuffer","accountHex","invoke","decode","encode","input","codec","account","inputBuffer","toJSON","fromJSON","APIClient","node_1","account_1","block_1","transaction_1","_node","Node","_account","_block","Block","_nodeInfo","getNodeInfo","_transaction","Transaction","disconnect","actionName","params","subscribe","eventName","cb","node","block","transaction","codec_1","registeredSchema","id","idString","blockHex","blockBytes","decodeBlock","height","encodeBlock","asset","headerRoot","header","tmpBlockId","blockHeader","headerAssetJson","blockHeadersAssets","version","payload","tx","txAsset","txRoot","tmpId","schemaAsset","getTransactionAssetSchema","jsonTxAsset","jsonTx","alloc","txAssetObject","txObject","encodeTransaction","decodeTransaction","decodeAccount","lisk_cryptography_1","txAssetSchema","transactionsAssets","find","assetSchema","moduleID","assetID","Error","schema","encodedAccount","encodedTransaction","hash","encodedAsset","encodedBlock","encodedPayload","map","encodedBlockAsset","encodedBlockHeader","createWSClient","createIPCClient","createClient","api_client_1","ipc_channel_1","ws_channel_1","client","init","dataPath","ipcChannel","IPCChannel","connect","url","wsChannel","WSChannel","create_clients_1","path","axon","os_1","pm2_axon_rpc_1","events_1","utils_1","CONNECTION_TIME_OUT","socketsDir","socketDir","join","resolve","replace","homedir","root","pub","sub","rpc","getSocketsPath","_eventPubSocketPath","_eventSubSocketPath","_rpcServerSocketPath","_pubSocket","socket","_subSocket","_rpcClient","Client","_events","EventEmitter","_id","Promise","reject","timeout","setTimeout","on","clearTimeout","undefined","finally","removeAllListeners","sock","eventData","emit","method","close","action","jsonrpc","data","convertRPCError","error","result","lisk_transactions_1","nodeInfo","_schema","passphrase","options","_a","txInput","networkIdentifier","publicKey","getAddressAndPublicKeyFromPassphrase","moduleName","registeredModule","registeredModules","assetName","m","registeredAsset","transactionAssets","nonce","sequence","BigInt","senderPublicKey","signatures","numberOfSignatures","signMultiSignatureTransaction","includeSenderSignature","multisignatureKeys","signTransaction","transactionHex","transactionsHex","decodedTransactions","passphrases","getAddressFromPublicKey","encodedTx","transactionBuffer","computeMinFee","minFeePerByte","genesisConfig","baseFees","message","WebSocket","CONNECTION_TIMEOUT","ms","_","isAlive","_requestCounter","_pendingRequests","_url","_emitter","_ws","onclose","_handleClose","bind","onmessage","_handleMessage","addEventListener","_handlePing","connectHandler","onOpen","removeEventListener","errorHandler","onError","race","readyState","CLOSED","closeHandler","onClose","request","send","JSON","stringify","response","promise","_resolve","_reject","defer","event","res","parse","parseInt","transactions","cryptography","readBoolean","writeBoolean","buffer","offset","readBytes","writeBytes","varint_1","bytes","concat","writeUInt32","byteLength","keySize","readUInt32","subarray","Codec","validateSchema","lisk_validator_1","lisk_utils_1","collection_1","json_wrapper_1","validator","removeSchema","$id","schemaToValidate","$schema","liskSchemaIdentifier","errors","LiskValidationError","compile","_compileSchemas","addSchema","schemaName","_compileSchema","compiledSchema","writeObject","readObject","decodeJSON","decodedMessage","encodeJSON","objectFromJson","messageCopy","objects","cloneDeep","recursiveTypeCast","clearCache","type","properties","property","values","currentDepthSchema","entries","sort","a","b","fieldNumber","schemaPropertyName","schemaPropertyValue","nestedSchema","propertyName","schemaProp","binaryKey","generateKey","pop","items","dataType","writeArray","readArray","string_1","bytes_1","boolean_1","keys_1","default_value_1","_readers","uint32","sint32","readSInt32","uint64","readUInt64","sint64","readSInt64","string","readString","boolean","_writers","writeSInt32","writeUInt64","writeSInt64","writeString","chunks","simpleObjectSize","headerProp","size","encodedValues","totalWrittenSize","objectSize","e","binaryValue","terminateIndex","index","typeSchema","nextOffset","objectSizeLength","getDefaultValue","readKey","scalarValue","scalarSize","startingByte","rootSchema","nestedTypeSchema","wire2KeySize","terminatingObjectSize","wireType2Length","wireType2LengthSize","wire2Size","arrayLength","wireType2Size","end","totalSize","j","contents","contentSize","__createBinding","k","k2","get","__exportStar","mappers","findObjectByPath","pathArr","Done","mode","object","item","arrayObject","wireType","stringBuffer","msg","rest","Number","shift","bit","varInt","stringToBuffer","hexToBuffer","bufferToHex","intToBuffer","LITTLE_ENDIAN","BIG_ENDIAN","endianness","signed","includes","writeIntBE","writeUIntBE","writeBigInt64BE","writeBigUInt64BE","writeIntLE","writeUIntLE","writeBigInt64LE","writeBigUInt64LE","hexRegex","hex","argumentName","matchedHex","match","str","DEFAULT_BASE32_ADDRESS_PREFIX","DEFAULT_LISK32_ADDRESS_PREFIX","BINARY_ADDRESS_LENGTH","SIGNED_MESSAGE_PREFIX","parseEncryptedPassphrase","stringifyEncryptedPassphrase","convertPrivateKeyEd2Curve","convertPublicKeyEd2Curve","getFirstEightBytesReversed","convertUInt5ToBase32","convertUIntArray","ed2curve","querystring","reverse","uintArray","fromBits","toBits","maxValue","accumulator","bits","byte","uint5Array","val","convertPublicKey","convertSecretKey","encryptedPassphrase","objectToStringify","iterations","salt","cipherText","iv","tag","parseIterations","iterationsString","isNaN","keyValuePairs","decryptPassphraseWithPassword","encryptPassphraseWithPassword","decryptMessageWithPassphrase","encryptMessageWithPassphrase","crypto","buffer_1","convert_1","nacl_1","PBKDF2_ITERATIONS","recipientPublicKey","privateKey","senderPrivateKeyBytes","getPrivateAndPublicKeyFromPassphrase","convertedPrivateKey","messageInBytes","getRandomBytes","publicKeyUint8Array","convertedPublicKey","cipherBytes","box","encryptedMessage","cipherHex","recipientPrivateKeyBytes","nonceBytes","decoded","openBox","getKeyFromPassword","password","pbkdf2Sync","plainText","randomBytes","cipher","createCipheriv","firstBlock","update","encrypted","final","getAuthTag","tagBuffer","getTagBuffer","decipher","createDecipheriv","setAuthTag","getNetworkIdentifier","cryptoHashSha256","dataHash","createHash","digest","format","encoded","genesisBlockID","communityIdentifier","hashOnion","generateHashOnionSeed","hash_1","seed","count","distance","previousHash","hashes","nextHash","constants","getPublicKey","getBase32AddressFromAddress","getLisk32AddressFromAddress","getAddressFromBase32Address","getAddressFromLisk32Address","validateBase32Address","validateLisk32Address","getBase32AddressFromPassphrase","getLisk32AddressFromPassphrase","getBase32AddressFromPublicKey","getLisk32AddressFromPublicKey","verifyChecksum","createChecksum","getAddressFromPrivateKey","getAddressFromPassphrase","getKeys","constants_1","hashed","getKeyPair","truncatedBuffer","GENERATOR","polymod","chk","top","mod","integerSequence","addressToLisk32","byteSequence","uint5Address","uint5Checksum","prefix","LISK32_CHARSET","addressPrefix","substring","addressSubstringArray","split","every","char","base32Address","integerSequence8","getLegacyAddressFromPrivateKey","getLegacyAddressFromPassphrase","getLegacyAddressAndPublicKeyFromPassphrase","getLegacyAddressFromPublicKey","publicKeyHash","readBigUInt64BE","verifyDetached","signDetached","NACL_SIGN_SIGNATURE_LENGTH","NACL_SIGN_PUBLICKEY_LENGTH","lib","tweetnacl","nonceInBytes","Uint8Array","originalMessage","open","messageBytes","privateKeyBytes","sign","detached","signatureBytes","publicKeyBytes","verify","hashedSeed","secretKey","keyPair","fromSeed","verifyData","signData","signDataWithPassphrase","signDataWithPrivateKey","signAndPrintMessage","printSignedMessage","verifyMessageWithPublicKey","signMessageWithPassphrase","digestMessage","varuint_bitcoin_1","createHeader","text","signedMessageHeader","messageHeader","publicKeyHeader","signatureHeader","signatureFooter","SIGNED_MESSAGE_PREFIX_BYTES","SIGNED_MESSAGE_PREFIX_LENGTH","msgBytes","msgLenBytes","dataBytes","signature","Boolean","signedMessage","Mnemonic","getPassphraseValidationErrors","locateConsecutiveWhitespaces","locateUppercaseCharacters","countUppercaseCharacters","countPassphraseWords","countPassphraseWhitespaces","passphraseRegularExpression","whitespaceMatches","uppercaseCharacterMatches","reduce","upperCaseIndexes","character","whitespaceIndexes","wordlists","expectedWords","expectedWhitespaces","wordsInPassphrase","whiteSpacesInPassphrase","uppercaseCharacterInPassphrase","passphraseWordError","actual","code","expected","whiteSpaceError","location","uppercaseCharacterError","validationError","finalWordList","english","errorArray","validateMnemonic","sign_1","computeTransactionMinFee","trx","_b","_c","mockSignatures","fill","numberOfEmptySignatures","getBytes","baseFee","bf","fee","trxWithoutFee","minFee","convertLSKToBeddows","convertBeddowsToLSK","FIXED_POINT","getDecimalPlaces","amount","beddowsAmount","beddowsAmountBigInt","MAX_UINT64","int","floating","floatingPointsSplit","toLocaleString","maximumFractionDigits","lskAmount","splitAmount","liskAmountInt","liskAmountFloatBigInt","padEnd","validateTransaction","signTransactionWithPrivateKey","signMultiSignatureTransactionWithPrivateKey","getSigningBytes","fee_1","format_1","validate_1","baseTransactionSchema","required","schema_1","transactionObject","validationErrors","assetBytes","equals","transactionWithNetworkIdentifierBytes","sanitizeSignaturesArray","mandatoryKeys","optionalKeys","publicKeyA","publicKeyB","compare","mandatoryKeyIndex","findIndex","aPublicKey","optionalKeyIndex","signatureOffset","signerPublicKey","transactionObjectWithEmptyAsset","schemaErrors","validate","assetSchemaErrors","NODE_HASH_SIZE","NODE_INDEX_SIZE","LAYER_INDEX_SIZE","BRANCH_PREFIX","LEAF_PREFIX","EMPTY_HASH","MerkleTree","initValues","_width","_hashToValueMap","_locationToHashMap","rootNode","_generateLeaf","_root","getBinaryString","_getHeight","_preHashedLeaf","preHashedLeaf","_build","getNode","nodeHash","isLeaf","layerIndex","readInt8","nodeIndex","readInt32BE","rightHash","leftHash","append","leaf","appendPath","currentNode","currentLayer","currentLayerSize","leftNode","appendData","appendNode","rightNodeInfo","leftNodeInfo","newBranchNode","_generateBranch","generateProof","queryData","indexes","dataLength","addedPath","dataStructures","BufferSet","queryNode","has","add","pairLayerIndex","pairNodeIndex","side","pairSide","getPairLocation","pairNodeHash","leftHashBuffer","rightHashBuffer","parentNodeHash","generateHash","clear","_printNode","getData","Math","ceil","log2","nodeIndexBuffer","writeInt32BE","leafValueWithoutNodeIndex","leafHash","leafValueWithNodeIndex","layerIndexBuffer","writeInt8","branchValue","branchHash","leafHashes","orphanNodeHashInPreviousLayer","currentLayerIndex","currentLayerHashes","pairsOfHashes","parentLayerHashes","hashValue","level","nodeValue","repeat","getBinary","getLayerStructure","getMaxIdxAtLayer","layer","max","r","floor","structure","num","binaryString","d","treeHeight","layerStructure","numberOfNodesInLayer","binary","direction","acc","pairLocation","verifyProof","proof","results","BufferMap","rootHash","verified","locationToPathMap","queryHash","set","some","currentHash","nextPath","buffer_string_1","_data","keyString","delete","clone","keyReadableString","MaxHeap","min_heap_1","MinHeap","_moveUp","originalIndex","_nodes","parentIndex","_parentIndex","_moveDown","halfCount","leftChild","_leftChildIndex","rightChild","_rightChildIndex","heap","_insertAll","peek","_insertAllFromHeap","jobHandlers","Mutex","_queue","_locked","isLocked","releaseFunc","_tick","worker","release","acquire","Scheduler","job","interval","_active","_interval","_job","run","stop","callJobAfterTimeout","bufferArrayUniqueItems","bufferArrayOrderByLex","bufferArraySubtract","bufferArrayEqual","bufferArrayContainsSome","bufferArrayContains","bufferArrayIncludes","buffer_set_1","arr1","sortedArray","mergeDeep","isIterable","dest","srcs","src","MIN_SINT64","MAX_SINT64","MAX_UINT32","MIN_SINT32","MAX_SINT32","convertErrorsToLegacyFormat","errorParamToString","param","paramAsString","instancePathToLegacyDataPath","instancePath","errorFormatterMap","additionalProperties","additionalProperty","minLength","maxLength","defaultErrorFormatter","errorFormatter","keyword","super","_compileErrors","oddInteger","ipOrFQDN","ip","networkVersion","camelCase","int32","int64","validation_1","isHexString","isBytes","isNumberString","isSInt64","isUInt64","isUInt32","isSInt32","camelCaseRegex","exec","isSemVer","isEncryptedPassphrase","isIP","isIPV4","isInteger","dataTypeKeyword","metaSchema","createDebug","errors_1","debug","title","enum","parentSchema","it","schemaPath","_dataCxt","isBoolean","parent","isString","modifying","fieldNumberKeyword","minimum","maximum","schemaEnv","parentPath","parentSchemaObject","parts","deepValue","fieldNumbers","uniqueFieldNumbers","Set","valid","liskMetaSchema","const","propertyNames","anyOf","$ref","minProperties","uniqueItems","definitions","allOf","ajv_1","ajv_formats_1","formats","field_number_1","data_type_1","lisk_meta_schema_1","_validator","default","strict","strictSchema","allErrors","useDefaults","addUsedSchema","strictTypes","formatName","addFormat","addKeyword","datum","addMetaSchema","schemaKeyRef","isCsv","isVersionMatch","isStringEndsWith","isPort","isIPV6","isProtocolString","isGreaterThanRangedVersion","isLessThanRangedVersion","isRangedSemVer","isValidInteger","semver_1","validator_1","isInt","keyValueRegExp","RegExp","validRange","ltr","gtr","port","suffixes","suffix","endsWith","gte"],"mappings":"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","file":"bundle.699.d9e3945aa8edf190f239.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import defineProperty from \"./defineProperty.js\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys.push.apply(ownKeys, Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","module.exports = require(\"regenerator-runtime\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nclass Account {\n    constructor(channel, schemas) {\n        this._channel = channel;\n        this._schemas = schemas;\n    }\n    async get(address) {\n        const addressString = Buffer.isBuffer(address) ? address.toString('hex') : address;\n        const accountHex = await this._channel.invoke('app:getAccount', {\n            address: addressString,\n        });\n        return this.decode(Buffer.from(accountHex, 'hex'));\n    }\n    encode(input) {\n        return lisk_codec_1.codec.encode(this._schemas.account, input);\n    }\n    decode(input) {\n        const inputBuffer = Buffer.isBuffer(input) ? input : Buffer.from(input, 'hex');\n        return lisk_codec_1.codec.decode(this._schemas.account, inputBuffer);\n    }\n    toJSON(account) {\n        return lisk_codec_1.codec.toJSON(this._schemas.account, account);\n    }\n    fromJSON(account) {\n        return lisk_codec_1.codec.fromJSON(this._schemas.account, account);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIClient = void 0;\nconst node_1 = require(\"./node\");\nconst account_1 = require(\"./account\");\nconst block_1 = require(\"./block\");\nconst transaction_1 = require(\"./transaction\");\nclass APIClient {\n    constructor(channel) {\n        this._channel = channel;\n    }\n    async init() {\n        this._schemas = await this._channel.invoke('app:getSchema');\n        this._node = new node_1.Node(this._channel);\n        this._account = new account_1.Account(this._channel, this._schemas);\n        this._block = new block_1.Block(this._channel, this._schemas);\n        this._nodeInfo = await this._node.getNodeInfo();\n        this._transaction = new transaction_1.Transaction(this._channel, this._schemas, this._nodeInfo);\n    }\n    async disconnect() {\n        return this._channel.disconnect();\n    }\n    async invoke(actionName, params) {\n        return this._channel.invoke(actionName, params);\n    }\n    subscribe(eventName, cb) {\n        this._channel.subscribe(eventName, cb);\n    }\n    get schemas() {\n        return this._schemas;\n    }\n    get node() {\n        return this._node;\n    }\n    get account() {\n        return this._account;\n    }\n    get block() {\n        return this._block;\n    }\n    get transaction() {\n        return this._transaction;\n    }\n}\nexports.APIClient = APIClient;\n//# sourceMappingURL=api_client.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst codec_1 = require(\"./codec\");\nclass Block {\n    constructor(channel, registeredSchema) {\n        this._channel = channel;\n        this._schemas = registeredSchema;\n    }\n    async get(id) {\n        const idString = Buffer.isBuffer(id) ? id.toString('hex') : id;\n        const blockHex = await this._channel.invoke('app:getBlockByID', {\n            id: idString,\n        });\n        const blockBytes = Buffer.from(blockHex, 'hex');\n        return codec_1.decodeBlock(blockBytes, this._schemas);\n    }\n    async getByHeight(height) {\n        const blockHex = await this._channel.invoke('app:getBlockByHeight', { height });\n        const blockBytes = Buffer.from(blockHex, 'hex');\n        return codec_1.decodeBlock(blockBytes, this._schemas);\n    }\n    encode(input) {\n        return codec_1.encodeBlock(input, this._schemas);\n    }\n    decode(input) {\n        const inputBuffer = Buffer.isBuffer(input) ? input : Buffer.from(input, 'hex');\n        return codec_1.decodeBlock(inputBuffer, this._schemas);\n    }\n    toJSON(block) {\n        const { asset, ...headerRoot } = block.header;\n        const tmpBlockId = headerRoot.id;\n        delete headerRoot.id;\n        const header = {\n            ...lisk_codec_1.codec.toJSON(this._schemas.blockHeader, headerRoot),\n            asset: {},\n            id: tmpBlockId === null || tmpBlockId === void 0 ? void 0 : tmpBlockId.toString('hex'),\n        };\n        const headerAssetJson = lisk_codec_1.codec.toJSON(this._schemas.blockHeadersAssets[block.header.version], asset);\n        header.asset = headerAssetJson;\n        const payload = [];\n        for (const tx of block.payload) {\n            const { asset: txAsset, ...txRoot } = tx;\n            const tmpId = txRoot.id;\n            delete txRoot.id;\n            const schemaAsset = codec_1.getTransactionAssetSchema(tx, this._schemas);\n            const jsonTxAsset = lisk_codec_1.codec.toJSON(schemaAsset, txAsset);\n            const jsonTxRoot = lisk_codec_1.codec.toJSON(this._schemas.transaction, txRoot);\n            const jsonTx = {\n                ...jsonTxRoot,\n                id: tmpId === null || tmpId === void 0 ? void 0 : tmpId.toString('hex'),\n                asset: jsonTxAsset,\n            };\n            payload.push(jsonTx);\n        }\n        return { header, payload };\n    }\n    fromJSON(block) {\n        const { asset, ...headerRoot } = block.header;\n        const tmpBlockId = headerRoot.id ? Buffer.from(headerRoot.id, 'hex') : Buffer.alloc(0);\n        delete headerRoot.id;\n        const header = {\n            ...lisk_codec_1.codec.fromJSON(this._schemas.blockHeader, headerRoot),\n            asset: {},\n            id: tmpBlockId,\n        };\n        const headerAssetJson = lisk_codec_1.codec.fromJSON(this._schemas.blockHeadersAssets[block.header.version], asset);\n        header.asset = headerAssetJson;\n        const payload = [];\n        for (const tx of block.payload) {\n            const { asset: txAsset, ...txRoot } = tx;\n            const tmpId = txRoot.id ? Buffer.from(txRoot.id, 'hex') : Buffer.alloc(0);\n            delete txRoot.id;\n            const schemaAsset = codec_1.getTransactionAssetSchema(tx, this._schemas);\n            const txAssetObject = lisk_codec_1.codec.fromJSON(schemaAsset, txAsset);\n            const txRootObject = lisk_codec_1.codec.fromJSON(this._schemas.transaction, txRoot);\n            const txObject = {\n                ...txRootObject,\n                id: tmpId,\n                asset: txAssetObject,\n            };\n            payload.push(txObject);\n        }\n        return { header, payload };\n    }\n}\nexports.Block = Block;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encodeBlock = exports.decodeBlock = exports.encodeTransaction = exports.decodeTransaction = exports.decodeAccount = exports.getTransactionAssetSchema = void 0;\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nconst getTransactionAssetSchema = (transaction, registeredSchema) => {\n    const txAssetSchema = registeredSchema.transactionsAssets.find(assetSchema => assetSchema.moduleID === transaction.moduleID && assetSchema.assetID === transaction.assetID);\n    if (!txAssetSchema) {\n        throw new Error(`ModuleID: ${transaction.moduleID} AssetID: ${transaction.assetID} is not registered.`);\n    }\n    return txAssetSchema.schema;\n};\nexports.getTransactionAssetSchema = getTransactionAssetSchema;\nconst decodeAccount = (encodedAccount, registeredSchema) => lisk_codec_1.codec.decode(registeredSchema.account, encodedAccount);\nexports.decodeAccount = decodeAccount;\nconst decodeTransaction = (encodedTransaction, registeredSchema) => {\n    const transaction = lisk_codec_1.codec.decode(registeredSchema.transaction, encodedTransaction);\n    const assetSchema = exports.getTransactionAssetSchema(transaction, registeredSchema);\n    const asset = lisk_codec_1.codec.decode(assetSchema, transaction.asset);\n    const id = lisk_cryptography_1.hash(encodedTransaction);\n    return {\n        ...transaction,\n        asset,\n        id,\n    };\n};\nexports.decodeTransaction = decodeTransaction;\nconst encodeTransaction = (transaction, registeredSchema) => {\n    const assetSchema = exports.getTransactionAssetSchema(transaction, registeredSchema);\n    const encodedAsset = lisk_codec_1.codec.encode(assetSchema, transaction.asset);\n    const decodedTransaction = lisk_codec_1.codec.encode(registeredSchema.transaction, {\n        ...transaction,\n        asset: encodedAsset,\n    });\n    return decodedTransaction;\n};\nexports.encodeTransaction = encodeTransaction;\nconst decodeBlock = (encodedBlock, registeredSchema) => {\n    const block = lisk_codec_1.codec.decode(registeredSchema.block, encodedBlock);\n    const header = lisk_codec_1.codec.decode(registeredSchema.blockHeader, block.header);\n    const id = lisk_cryptography_1.hash(block.header);\n    const assetSchema = registeredSchema.blockHeadersAssets[header.version];\n    if (!assetSchema) {\n        throw new Error(`Block header asset version ${header.version} is not registered.`);\n    }\n    const asset = lisk_codec_1.codec.decode(assetSchema, header.asset);\n    const payload = [];\n    for (const tx of block.payload) {\n        payload.push(exports.decodeTransaction(tx, registeredSchema));\n    }\n    return {\n        header: {\n            ...header,\n            asset,\n            id,\n        },\n        payload,\n    };\n};\nexports.decodeBlock = decodeBlock;\nconst encodeBlock = (block, registeredSchema) => {\n    const encodedPayload = block.payload.map(p => exports.encodeTransaction(p, registeredSchema));\n    const assetSchema = registeredSchema.blockHeadersAssets[block.header.version];\n    if (!assetSchema) {\n        throw new Error(`Block header asset version ${block.header.version} is not registered.`);\n    }\n    const encodedBlockAsset = lisk_codec_1.codec.encode(assetSchema, block.header.asset);\n    const encodedBlockHeader = lisk_codec_1.codec.encode(registeredSchema.blockHeader, {\n        ...block.header,\n        asset: encodedBlockAsset,\n    });\n    return lisk_codec_1.codec.encode(registeredSchema.block, {\n        header: encodedBlockHeader,\n        payload: encodedPayload,\n    });\n};\nexports.encodeBlock = encodeBlock;\n//# sourceMappingURL=codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWSClient = exports.createIPCClient = exports.createClient = void 0;\nconst api_client_1 = require(\"./api_client\");\nconst ipc_channel_1 = require(\"./ipc_channel\");\nconst ws_channel_1 = require(\"./ws_channel\");\nconst createClient = async (channel) => {\n    const client = new api_client_1.APIClient(channel);\n    await client.init();\n    return client;\n};\nexports.createClient = createClient;\nconst createIPCClient = async (dataPath) => {\n    const ipcChannel = new ipc_channel_1.IPCChannel(dataPath);\n    await ipcChannel.connect();\n    return exports.createClient(ipcChannel);\n};\nexports.createIPCClient = createIPCClient;\nconst createWSClient = async (url) => {\n    const wsChannel = new ws_channel_1.WSChannel(url);\n    await wsChannel.connect();\n    return exports.createClient(wsChannel);\n};\nexports.createWSClient = createWSClient;\n//# sourceMappingURL=create_clients.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createClient = exports.createWSClient = exports.createIPCClient = void 0;\nvar create_clients_1 = require(\"./create_clients\");\nObject.defineProperty(exports, \"createIPCClient\", { enumerable: true, get: function () { return create_clients_1.createIPCClient; } });\nObject.defineProperty(exports, \"createWSClient\", { enumerable: true, get: function () { return create_clients_1.createWSClient; } });\nObject.defineProperty(exports, \"createClient\", { enumerable: true, get: function () { return create_clients_1.createClient; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IPCChannel = void 0;\nconst path = require(\"path\");\nconst axon = require(\"pm2-axon\");\nconst os_1 = require(\"os\");\nconst pm2_axon_rpc_1 = require(\"pm2-axon-rpc\");\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\nconst CONNECTION_TIME_OUT = 2000;\nconst getSocketsPath = (dataPath) => {\n    const socketDir = path.join(path.resolve(dataPath.replace('~', os_1.homedir())), 'tmp', 'sockets');\n    return {\n        root: `unix://${socketDir}`,\n        pub: `unix://${socketDir}/pub_socket.sock`,\n        sub: `unix://${socketDir}/sub_socket.sock`,\n        rpc: `unix://${socketDir}/bus_rpc_socket.sock`,\n    };\n};\nclass IPCChannel {\n    constructor(dataPath) {\n        const socketsDir = getSocketsPath(dataPath);\n        this._eventPubSocketPath = socketsDir.pub;\n        this._eventSubSocketPath = socketsDir.sub;\n        this._rpcServerSocketPath = socketsDir.rpc;\n        this._pubSocket = axon.socket('push', {});\n        this._subSocket = axon.socket('sub', {});\n        this._rpcClient = new pm2_axon_rpc_1.Client(axon.socket('req'));\n        this._events = new events_1.EventEmitter();\n        this._id = 0;\n    }\n    async connect() {\n        await new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                reject(new Error('IPC Socket client connection timeout. Please check if IPC server is running.'));\n            }, CONNECTION_TIME_OUT);\n            this._pubSocket.on('connect', () => {\n                clearTimeout(timeout);\n                resolve(undefined);\n            });\n            this._pubSocket.on('error', reject);\n            this._pubSocket.connect(this._eventSubSocketPath);\n        }).finally(() => {\n            this._pubSocket.removeAllListeners('connect');\n            this._pubSocket.removeAllListeners('error');\n        });\n        await new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                reject(new Error('IPC Socket client connection timeout. Please check if IPC server is running.'));\n            }, CONNECTION_TIME_OUT);\n            this._subSocket.on('connect', () => {\n                clearTimeout(timeout);\n                resolve();\n            });\n            this._subSocket.on('error', reject);\n            this._subSocket.connect(this._eventPubSocketPath);\n        }).finally(() => {\n            this._subSocket.removeAllListeners('connect');\n            this._subSocket.removeAllListeners('error');\n        });\n        await new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                reject(new Error('IPC Socket client connection timeout. Please check if IPC server is running.'));\n            }, CONNECTION_TIME_OUT);\n            this._rpcClient.sock.on('connect', () => {\n                clearTimeout(timeout);\n                resolve(undefined);\n            });\n            this._rpcClient.sock.on('error', reject);\n            this._rpcClient.sock.connect(this._rpcServerSocketPath);\n        }).finally(() => {\n            this._rpcClient.sock.removeAllListeners('connect');\n            this._rpcClient.sock.removeAllListeners('error');\n        });\n        this._subSocket.on('message', (eventData) => {\n            this._events.emit(eventData.method, eventData.params);\n        });\n    }\n    async disconnect() {\n        this._subSocket.removeAllListeners();\n        this._pubSocket.close();\n        this._subSocket.close();\n        this._rpcClient.sock.close();\n    }\n    async invoke(actionName, params) {\n        this._id += 1;\n        const action = {\n            id: this._id,\n            jsonrpc: '2.0',\n            method: actionName,\n            params: params !== null && params !== void 0 ? params : {},\n        };\n        return new Promise((resolve, reject) => {\n            this._rpcClient.call('invoke', action, (err, data) => {\n                if (err) {\n                    reject(utils_1.convertRPCError(err));\n                    return;\n                }\n                if (data.error) {\n                    reject(utils_1.convertRPCError(data.error));\n                    return;\n                }\n                resolve(data.result);\n            });\n        });\n    }\n    subscribe(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n}\nexports.IPCChannel = IPCChannel;\n//# sourceMappingURL=ipc_channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nclass Node {\n    constructor(channel) {\n        this._channel = channel;\n    }\n    async getNodeInfo() {\n        return this._channel.invoke('app:getNodeInfo');\n    }\n    async getNetworkStats() {\n        return this._channel.invoke('app:getNetworkStats');\n    }\n    async getConnectedPeers() {\n        return this._channel.invoke('app:getConnectedPeers');\n    }\n    async getDisconnectedPeers() {\n        return this._channel.invoke('app:getDisconnectedPeers');\n    }\n}\nexports.Node = Node;\n//# sourceMappingURL=node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transaction = void 0;\nconst lisk_transactions_1 = require(\"@liskhq/lisk-transactions\");\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst codec_1 = require(\"./codec\");\nclass Transaction {\n    constructor(channel, registeredSchema, nodeInfo) {\n        this._channel = channel;\n        this._schema = registeredSchema;\n        this._nodeInfo = nodeInfo;\n    }\n    async create(input, passphrase, options) {\n        var _a;\n        const txInput = input;\n        const networkIdentifier = Buffer.from(this._nodeInfo.networkIdentifier, 'hex');\n        const { publicKey, address } = lisk_cryptography_1.getAddressAndPublicKeyFromPassphrase(passphrase);\n        const accountHex = await this._channel.invoke('app:getAccount', {\n            address: address.toString('hex'),\n        });\n        const account = codec_1.decodeAccount(Buffer.from(accountHex, 'hex'), this._schema);\n        if (!txInput.moduleID) {\n            if (!txInput.moduleName) {\n                throw new Error('Missing moduleID and moduleName');\n            }\n            const registeredModule = this._nodeInfo.registeredModules.find(module => module.name === input.moduleName);\n            if (!registeredModule) {\n                throw new Error(`Module corresponding to name ${txInput.moduleName} not registered.`);\n            }\n            txInput.moduleID = registeredModule.id;\n        }\n        if (typeof txInput.assetID !== 'number') {\n            if (!txInput.assetName) {\n                throw new Error('Missing assetID and assetName');\n            }\n            const registeredModule = this._nodeInfo.registeredModules.find(m => m.id === txInput.moduleID);\n            if (!registeredModule) {\n                throw new Error(`Module corresponding to id ${txInput.moduleID} not registered.`);\n            }\n            const registeredAsset = registeredModule.transactionAssets.find(asset => asset.name === txInput.assetName);\n            if (!registeredAsset) {\n                throw new Error(`Asset corresponding to name ${txInput.assetName} not registered.`);\n            }\n            txInput.assetID = registeredAsset.id;\n        }\n        if (typeof txInput.nonce !== 'bigint') {\n            if (typeof account.sequence !== 'object' ||\n                typeof account.sequence.nonce !== 'bigint') {\n                throw new Error('Unsupported account type');\n            }\n            txInput.nonce = account.sequence.nonce;\n        }\n        if (txInput.nonce < BigInt(0)) {\n            throw new Error('Nonce must be greater or equal to zero');\n        }\n        if (!txInput.senderPublicKey) {\n            txInput.senderPublicKey = publicKey;\n        }\n        txInput.signatures = (_a = txInput.signatures) !== null && _a !== void 0 ? _a : [];\n        const assetSchema = codec_1.getTransactionAssetSchema(txInput, this._schema);\n        if (account.keys && account.keys.numberOfSignatures > 0) {\n            return lisk_transactions_1.signMultiSignatureTransaction(assetSchema, txInput, networkIdentifier, passphrase, account.keys, options === null || options === void 0 ? void 0 : options.includeSenderSignature);\n        }\n        if ((options === null || options === void 0 ? void 0 : options.multisignatureKeys) && (options === null || options === void 0 ? void 0 : options.includeSenderSignature)) {\n            return lisk_transactions_1.signMultiSignatureTransaction(assetSchema, txInput, networkIdentifier, passphrase, options.multisignatureKeys, options.includeSenderSignature);\n        }\n        return lisk_transactions_1.signTransaction(assetSchema, txInput, networkIdentifier, passphrase);\n    }\n    async get(id) {\n        const idString = Buffer.isBuffer(id) ? id.toString('hex') : id;\n        const transactionHex = await this._channel.invoke('app:getTransactionByID', {\n            id: idString,\n        });\n        return codec_1.decodeTransaction(Buffer.from(transactionHex, 'hex'), this._schema);\n    }\n    async getFromPool() {\n        const transactionsHex = await this._channel.invoke('app:getTransactionsFromPool');\n        const decodedTransactions = [];\n        for (const transactionHex of transactionsHex) {\n            decodedTransactions.push(codec_1.decodeTransaction(Buffer.from(transactionHex, 'hex'), this._schema));\n        }\n        return decodedTransactions;\n    }\n    async sign(transaction, passphrases, options) {\n        const assetSchema = codec_1.getTransactionAssetSchema(transaction, this._schema);\n        const networkIdentifier = Buffer.from(this._nodeInfo.networkIdentifier, 'hex');\n        const address = lisk_cryptography_1.getAddressFromPublicKey(transaction.senderPublicKey);\n        const accountHex = await this._channel.invoke('app:getAccount', {\n            address: address.toString('hex'),\n        });\n        const account = codec_1.decodeAccount(Buffer.from(accountHex, 'hex'), this._schema);\n        if (account.keys && account.keys.numberOfSignatures > 0) {\n            for (const passphrase of passphrases) {\n                lisk_transactions_1.signMultiSignatureTransaction(assetSchema, transaction, networkIdentifier, passphrase, account.keys, options === null || options === void 0 ? void 0 : options.includeSenderSignature);\n            }\n            return transaction;\n        }\n        if ((options === null || options === void 0 ? void 0 : options.multisignatureKeys) && (options === null || options === void 0 ? void 0 : options.includeSenderSignature)) {\n            for (const passphrase of passphrases) {\n                lisk_transactions_1.signMultiSignatureTransaction(assetSchema, transaction, networkIdentifier, passphrase, options.multisignatureKeys, options.includeSenderSignature);\n            }\n            return transaction;\n        }\n        return lisk_transactions_1.signTransaction(assetSchema, transaction, networkIdentifier, passphrases[0]);\n    }\n    async send(transaction) {\n        const encodedTx = codec_1.encodeTransaction(transaction, this._schema);\n        return this._channel.invoke('app:postTransaction', { transaction: encodedTx.toString('hex') });\n    }\n    decode(transaction) {\n        const transactionBuffer = Buffer.isBuffer(transaction)\n            ? transaction\n            : Buffer.from(transaction, 'hex');\n        return codec_1.decodeTransaction(transactionBuffer, this._schema);\n    }\n    encode(transaction) {\n        return codec_1.encodeTransaction(transaction, this._schema);\n    }\n    computeMinFee(transaction) {\n        const assetSchema = codec_1.getTransactionAssetSchema(transaction, this._schema);\n        const numberOfSignatures = transaction.signatures\n            ? transaction.signatures.length\n            : 1;\n        const options = {\n            minFeePerByte: this._nodeInfo.genesisConfig.minFeePerByte,\n            baseFees: this._nodeInfo.genesisConfig.baseFees,\n            numberOfSignatures,\n        };\n        return lisk_transactions_1.computeMinFee(assetSchema, transaction, options);\n    }\n    toJSON(transaction) {\n        const { asset: txAsset, ...txRoot } = transaction;\n        const tmpId = txRoot.id;\n        delete txRoot.id;\n        const schemaAsset = codec_1.getTransactionAssetSchema(txRoot, this._schema);\n        const jsonTxAsset = lisk_codec_1.codec.toJSON(schemaAsset, txAsset);\n        const jsonTxRoot = lisk_codec_1.codec.toJSON(this._schema.transaction, txRoot);\n        const jsonTx = {\n            ...jsonTxRoot,\n            asset: jsonTxAsset,\n            id: Buffer.isBuffer(tmpId) ? tmpId.toString('hex') : tmpId,\n        };\n        return jsonTx;\n    }\n    fromJSON(transaction) {\n        const { asset: txAsset, ...txRoot } = transaction;\n        const tmpId = txRoot.id;\n        delete txRoot.id;\n        const schemaAsset = codec_1.getTransactionAssetSchema(txRoot, this._schema);\n        const txAssetObject = lisk_codec_1.codec.fromJSON(schemaAsset, txAsset);\n        const txRootObject = lisk_codec_1.codec.fromJSON(this._schema.transaction, txRoot);\n        const txObject = {\n            ...txRootObject,\n            asset: txAssetObject,\n            id: typeof tmpId === 'string' ? Buffer.from(tmpId, 'hex') : Buffer.alloc(0),\n        };\n        return txObject;\n    }\n}\nexports.Transaction = Transaction;\n//# sourceMappingURL=transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertRPCError = void 0;\nconst convertRPCError = (error) => new Error(typeof error.data === 'string' ? error.data : error.message);\nexports.convertRPCError = convertRPCError;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WSChannel = void 0;\nconst WebSocket = require(\"isomorphic-ws\");\nconst events_1 = require(\"events\");\nconst utils_1 = require(\"./utils\");\nconst CONNECTION_TIMEOUT = 2000;\nconst RESPONSE_TIMEOUT = 3000;\nconst timeout = async (ms, message) => new Promise((_, reject) => {\n    const id = setTimeout(() => {\n        clearTimeout(id);\n        reject(new Error(message !== null && message !== void 0 ? message : `Timed out in ${ms}ms.`));\n    }, ms);\n});\nconst defer = () => {\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    return { promise, resolve, reject };\n};\nconst messageIsNotification = (input) => !!((input.id === undefined || input.id === null) && input.method);\nclass WSChannel {\n    constructor(url) {\n        this.isAlive = false;\n        this._requestCounter = 0;\n        this._pendingRequests = {};\n        this._url = url;\n        this._emitter = new events_1.EventEmitter();\n    }\n    async connect() {\n        this._ws = new WebSocket(this._url);\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        this._ws.addEventListener('ping', this._handlePing.bind(this));\n        const connectHandler = new Promise(resolve => {\n            var _a;\n            const onOpen = () => {\n                var _a;\n                this.isAlive = true;\n                (_a = this._ws) === null || _a === void 0 ? void 0 : _a.removeEventListener('open', onOpen);\n                resolve();\n            };\n            (_a = this._ws) === null || _a === void 0 ? void 0 : _a.addEventListener('open', onOpen);\n        });\n        const errorHandler = new Promise((_, reject) => {\n            var _a;\n            const onError = (error) => {\n                var _a;\n                this.isAlive = false;\n                (_a = this._ws) === null || _a === void 0 ? void 0 : _a.removeEventListener('error', onError);\n                reject(error.error);\n            };\n            (_a = this._ws) === null || _a === void 0 ? void 0 : _a.addEventListener('error', onError);\n        });\n        try {\n            await Promise.race([\n                connectHandler,\n                errorHandler,\n                timeout(CONNECTION_TIMEOUT, `Could not connect in ${CONNECTION_TIMEOUT}ms`),\n            ]);\n        }\n        catch (err) {\n            this._ws.close();\n            throw err;\n        }\n    }\n    async disconnect() {\n        this._requestCounter = 0;\n        this._pendingRequests = {};\n        if (!this._ws) {\n            return;\n        }\n        if (this._ws.readyState === WebSocket.CLOSED) {\n            this.isAlive = false;\n            this._ws = undefined;\n            return;\n        }\n        const closeHandler = new Promise(resolve => {\n            var _a;\n            const onClose = () => {\n                var _a;\n                this.isAlive = false;\n                (_a = this._ws) === null || _a === void 0 ? void 0 : _a.removeEventListener('close', onClose);\n                resolve();\n            };\n            (_a = this._ws) === null || _a === void 0 ? void 0 : _a.addEventListener('close', onClose);\n        });\n        this._ws.close();\n        await Promise.race([\n            closeHandler,\n            timeout(CONNECTION_TIMEOUT, `Could not disconnect in ${CONNECTION_TIMEOUT}ms`),\n        ]);\n    }\n    async invoke(actionName, params) {\n        var _a;\n        if (!this.isAlive) {\n            throw new Error('Websocket client is not connected.');\n        }\n        const request = {\n            jsonrpc: '2.0',\n            id: this._requestCounter,\n            method: actionName,\n            params: params !== null && params !== void 0 ? params : {},\n        };\n        (_a = this._ws) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(request));\n        const response = defer();\n        this._pendingRequests[this._requestCounter] = response;\n        this._requestCounter += 1;\n        return Promise.race([\n            response.promise,\n            timeout(RESPONSE_TIMEOUT, `Response not received in ${RESPONSE_TIMEOUT}ms`),\n        ]);\n    }\n    subscribe(eventName, cb) {\n        this._emitter.on(eventName, cb);\n    }\n    _handleClose() {\n        this.isAlive = false;\n    }\n    _handlePing() {\n        this.isAlive = true;\n    }\n    _handleMessage(event) {\n        const res = JSON.parse(event.data);\n        if (messageIsNotification(res)) {\n            this._emitter.emit(res.method, res.params);\n        }\n        else {\n            const id = typeof res.id === 'number' ? res.id : parseInt(res.id, 10);\n            if (this._pendingRequests[id]) {\n                if (res.error) {\n                    this._pendingRequests[id].reject(utils_1.convertRPCError(res.error));\n                }\n                else {\n                    this._pendingRequests[id].resolve(res.result);\n                }\n                delete this._pendingRequests[id];\n            }\n        }\n    }\n}\nexports.WSChannel = WSChannel;\n//# sourceMappingURL=ws_channel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codec = exports.validator = exports.tree = exports.utils = exports.transactions = exports.passphrase = exports.cryptography = exports.apiClient = void 0;\nexports.apiClient = require(\"@liskhq/lisk-api-client\");\nexports.cryptography = require(\"@liskhq/lisk-cryptography\");\nexports.passphrase = require(\"@liskhq/lisk-passphrase\");\nexports.transactions = require(\"@liskhq/lisk-transactions\");\nexports.utils = require(\"@liskhq/lisk-utils\");\nexports.tree = require(\"@liskhq/lisk-tree\");\nexports.validator = require(\"@liskhq/lisk-validator\");\nexports.codec = require(\"@liskhq/lisk-codec\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readBoolean = exports.writeBoolean = void 0;\nconst writeBoolean = (value) => value ? Buffer.from('01', 'hex') : Buffer.from('00', 'hex');\nexports.writeBoolean = writeBoolean;\nconst readBoolean = (buffer, offset) => [\n    buffer[offset] !== 0x00,\n    1,\n];\nexports.readBoolean = readBoolean;\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readBytes = exports.writeBytes = void 0;\nconst varint_1 = require(\"./varint\");\nconst writeBytes = (bytes) => Buffer.concat([varint_1.writeUInt32(bytes.length), bytes]);\nexports.writeBytes = writeBytes;\nconst readBytes = (buffer, offset) => {\n    const [byteLength, keySize] = varint_1.readUInt32(buffer, offset);\n    return [buffer.subarray(offset + keySize, offset + keySize + byteLength), byteLength + keySize];\n};\nexports.readBytes = readBytes;\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.codec = exports.Codec = exports.validateSchema = void 0;\nconst lisk_validator_1 = require(\"@liskhq/lisk-validator\");\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst utils_1 = require(\"./utils\");\nconst collection_1 = require(\"./collection\");\nconst json_wrapper_1 = require(\"./json_wrapper\");\nconst validateSchema = (schema) => {\n    var _a;\n    lisk_validator_1.validator.removeSchema(schema.$id);\n    const schemaToValidate = {\n        ...schema,\n        $schema: (_a = schema.$schema) !== null && _a !== void 0 ? _a : lisk_validator_1.liskSchemaIdentifier,\n    };\n    const errors = lisk_validator_1.validator.validateSchema(schemaToValidate);\n    if (errors.length) {\n        throw new lisk_validator_1.LiskValidationError([...errors]);\n    }\n    try {\n        lisk_validator_1.validator.compile(schemaToValidate);\n    }\n    finally {\n        lisk_validator_1.validator.removeSchema(schema.$id);\n    }\n    return true;\n};\nexports.validateSchema = validateSchema;\nclass Codec {\n    constructor() {\n        this._compileSchemas = {};\n    }\n    addSchema(schema) {\n        exports.validateSchema(schema);\n        const schemaName = schema.$id;\n        this._compileSchemas[schemaName] = this._compileSchema(schema, [], []);\n        return true;\n    }\n    encode(schema, message) {\n        if (this._compileSchemas[schema.$id] === undefined) {\n            this.addSchema(schema);\n        }\n        const compiledSchema = this._compileSchemas[schema.$id];\n        const res = collection_1.writeObject(compiledSchema, message, []);\n        return Buffer.concat(res[0]);\n    }\n    decode(schema, message) {\n        if (this._compileSchemas[schema.$id] === undefined) {\n            this.addSchema(schema);\n        }\n        const compiledSchema = this._compileSchemas[schema.$id];\n        const [res] = collection_1.readObject(message, 0, compiledSchema, message.length);\n        return res;\n    }\n    decodeJSON(schema, message) {\n        const decodedMessage = this.decode(schema, message);\n        const jsonMessageAsObject = this.toJSON(schema, decodedMessage);\n        return jsonMessageAsObject;\n    }\n    encodeJSON(schema, message) {\n        const objectFromJson = this.fromJSON(schema, message);\n        return this.encode(schema, objectFromJson);\n    }\n    toJSON(schema, message) {\n        const messageCopy = lisk_utils_1.objects.cloneDeep(message);\n        messageCopy[Symbol.iterator] = json_wrapper_1.iterator;\n        json_wrapper_1.recursiveTypeCast('toJSON', messageCopy, schema, []);\n        return messageCopy;\n    }\n    fromJSON(schema, message) {\n        const messageCopy = lisk_utils_1.objects.cloneDeep(message);\n        messageCopy[Symbol.iterator] = json_wrapper_1.iterator;\n        json_wrapper_1.recursiveTypeCast('fromJSON', messageCopy, schema, []);\n        return messageCopy;\n    }\n    clearCache() {\n        this._compileSchemas = {};\n    }\n    _compileSchema(schema, compiledSchema, dataPath) {\n        if (schema.type === 'object') {\n            const { properties } = schema;\n            if (properties === undefined) {\n                throw new Error('Invalid schema. Missing \"properties\" property');\n            }\n            for (const property of Object.values(properties)) {\n                if (!('fieldNumber' in property)) {\n                    throw new Error('Invalid schema. Missing \"fieldNumber\" in properties');\n                }\n            }\n            const currentDepthSchema = Object.entries(properties).sort((a, b) => a[1].fieldNumber - b[1].fieldNumber);\n            for (let i = 0; i < currentDepthSchema.length; i += 1) {\n                const [schemaPropertyName, schemaPropertyValue] = currentDepthSchema[i];\n                if (schemaPropertyValue.type === 'object') {\n                    if (!('fieldNumber' in schemaPropertyValue)) {\n                        throw new Error('Invalid schema. Missing \"fieldNumber\" in properties');\n                    }\n                    dataPath.push(schemaPropertyName);\n                    const nestedSchema = [\n                        {\n                            propertyName: schemaPropertyName,\n                            schemaProp: {\n                                type: schemaPropertyValue.type,\n                                fieldNumber: schemaPropertyValue.fieldNumber,\n                            },\n                            dataPath: [...dataPath],\n                            binaryKey: utils_1.generateKey(schemaPropertyValue),\n                        },\n                    ];\n                    const res = this._compileSchema(schemaPropertyValue, nestedSchema, dataPath);\n                    compiledSchema.push(res);\n                    dataPath.pop();\n                }\n                else if (schemaPropertyValue.type === 'array') {\n                    if (schemaPropertyValue.items === undefined) {\n                        throw new Error('Invalid schema. Missing \"items\" property for Array schema');\n                    }\n                    if (!('fieldNumber' in schemaPropertyValue)) {\n                        throw new Error('Invalid schema. Missing \"fieldNumber\" in properties');\n                    }\n                    dataPath.push(schemaPropertyName);\n                    if (schemaPropertyValue.items.type === 'object') {\n                        const nestedSchema = [\n                            {\n                                propertyName: schemaPropertyName,\n                                schemaProp: {\n                                    type: 'object',\n                                    fieldNumber: schemaPropertyValue.fieldNumber,\n                                },\n                                dataPath: [...dataPath],\n                                binaryKey: utils_1.generateKey(schemaPropertyValue),\n                            },\n                        ];\n                        const res = this._compileSchema(schemaPropertyValue.items, nestedSchema, dataPath);\n                        compiledSchema.push([\n                            {\n                                propertyName: schemaPropertyName,\n                                schemaProp: {\n                                    type: schemaPropertyValue.type,\n                                    fieldNumber: schemaPropertyValue.fieldNumber,\n                                },\n                                dataPath: [...dataPath],\n                                binaryKey: utils_1.generateKey(schemaPropertyValue),\n                            },\n                            res,\n                        ]);\n                        dataPath.pop();\n                    }\n                    else {\n                        compiledSchema.push([\n                            {\n                                propertyName: schemaPropertyName,\n                                schemaProp: {\n                                    type: schemaPropertyValue.type,\n                                    fieldNumber: schemaPropertyValue.fieldNumber,\n                                },\n                                dataPath: [...dataPath],\n                                binaryKey: utils_1.generateKey(schemaPropertyValue),\n                            },\n                            {\n                                propertyName: schemaPropertyName,\n                                schemaProp: {\n                                    dataType: schemaPropertyValue.items.dataType,\n                                    fieldNumber: schemaPropertyValue.fieldNumber,\n                                },\n                                dataPath: [...dataPath],\n                                binaryKey: utils_1.generateKey(schemaPropertyValue),\n                            },\n                        ]);\n                        dataPath.pop();\n                    }\n                }\n                else {\n                    compiledSchema.push({\n                        propertyName: schemaPropertyName,\n                        schemaProp: schemaPropertyValue,\n                        dataPath: [...dataPath],\n                        binaryKey: utils_1.generateKey(schemaPropertyValue),\n                    });\n                }\n            }\n        }\n        return compiledSchema;\n    }\n}\nexports.Codec = Codec;\nexports.codec = new Codec();\n//# sourceMappingURL=codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeArray = exports.readArray = exports.readObject = exports.writeObject = void 0;\nconst varint_1 = require(\"./varint\");\nconst string_1 = require(\"./string\");\nconst bytes_1 = require(\"./bytes\");\nconst boolean_1 = require(\"./boolean\");\nconst keys_1 = require(\"./keys\");\nconst default_value_1 = require(\"./utils/default_value\");\nconst _readers = {\n    uint32: varint_1.readUInt32,\n    sint32: varint_1.readSInt32,\n    uint64: varint_1.readUInt64,\n    sint64: varint_1.readSInt64,\n    string: string_1.readString,\n    bytes: bytes_1.readBytes,\n    boolean: boolean_1.readBoolean,\n};\nconst _writers = {\n    uint32: varint_1.writeUInt32,\n    sint32: varint_1.writeSInt32,\n    uint64: varint_1.writeUInt64,\n    sint64: varint_1.writeSInt64,\n    string: string_1.writeString,\n    bytes: bytes_1.writeBytes,\n    boolean: boolean_1.writeBoolean,\n};\nconst writeObject = (compiledSchema, message, chunks) => {\n    let simpleObjectSize = 0;\n    for (let i = 0; i < compiledSchema.length; i += 1) {\n        const property = compiledSchema[i];\n        if (Array.isArray(property)) {\n            const headerProp = property[0];\n            if (headerProp.schemaProp.type === 'array') {\n                const [, size] = exports.writeArray(property, message[headerProp.propertyName], chunks);\n                simpleObjectSize += size;\n                continue;\n            }\n            chunks.push(headerProp.binaryKey);\n            const [encodedValues, totalWrittenSize] = exports.writeObject(property, message[headerProp.propertyName], []);\n            const objectSize = _writers.uint32(totalWrittenSize);\n            simpleObjectSize += objectSize.length + headerProp.binaryKey.length;\n            chunks.push(objectSize);\n            for (let e = 0; e < encodedValues.length; e += 1) {\n                simpleObjectSize += encodedValues[e].length;\n                chunks.push(encodedValues[e]);\n            }\n        }\n        else {\n            if (property.schemaProp.type === 'object') {\n                continue;\n            }\n            const value = message[property.propertyName];\n            if (value === undefined) {\n                continue;\n            }\n            const { schemaProp: { dataType }, binaryKey, } = property;\n            if (dataType === undefined) {\n                throw new Error('Compiled Schema is corrupted as \"dataType\" can not be undefined.');\n            }\n            const binaryValue = _writers[dataType](value);\n            chunks.push(binaryKey);\n            chunks.push(binaryValue);\n            simpleObjectSize += binaryKey.length + binaryValue.length;\n        }\n    }\n    return [chunks, simpleObjectSize];\n};\nexports.writeObject = writeObject;\nconst readObject = (message, offset, compiledSchema, terminateIndex) => {\n    let index = offset;\n    const result = {};\n    for (let i = 0; i < compiledSchema.length; i += 1) {\n        const typeSchema = compiledSchema[i];\n        if (Array.isArray(typeSchema)) {\n            if (typeSchema[0].schemaProp.type === 'array') {\n                if (index >= terminateIndex) {\n                    result[typeSchema[0].propertyName] = [];\n                    continue;\n                }\n                const [arr, nextOffset] = exports.readArray(message, index, typeSchema, terminateIndex);\n                result[typeSchema[0].propertyName] = arr;\n                index = nextOffset;\n            }\n            else if (typeSchema[0].schemaProp.type === 'object') {\n                const [, keySize] = varint_1.readUInt32(message, index);\n                index += keySize;\n                const [objectSize, objectSizeLength] = varint_1.readUInt32(message, index);\n                index += objectSizeLength;\n                const [obj, nextOffset] = exports.readObject(message, index, typeSchema, objectSize + index);\n                result[typeSchema[0].propertyName] = obj;\n                index = nextOffset;\n            }\n            else {\n                throw new Error('Invalid container type');\n            }\n            continue;\n        }\n        if (typeSchema.schemaProp.type === 'object' || typeSchema.schemaProp.type === 'array') {\n            continue;\n        }\n        if (message.length <= index) {\n            result[typeSchema.propertyName] = default_value_1.getDefaultValue(typeSchema.schemaProp.dataType);\n            continue;\n        }\n        const [key, keySize] = varint_1.readUInt32(message, index);\n        const [fieldNumber] = keys_1.readKey(key);\n        if (fieldNumber !== typeSchema.schemaProp.fieldNumber) {\n            result[typeSchema.propertyName] = default_value_1.getDefaultValue(typeSchema.schemaProp.dataType);\n            continue;\n        }\n        index += keySize;\n        const [scalarValue, scalarSize] = _readers[typeSchema.schemaProp.dataType](message, index);\n        index += scalarSize;\n        result[typeSchema.propertyName] = scalarValue;\n    }\n    return [result, index];\n};\nexports.readObject = readObject;\nconst readArray = (message, offset, compiledSchema, terminateIndex) => {\n    let index = offset;\n    if (index >= message.length) {\n        return [[], index];\n    }\n    const startingByte = message[index];\n    const [rootSchema, typeSchema] = compiledSchema;\n    const [key] = varint_1.readUInt32(message, index);\n    const [fieldNumber] = keys_1.readKey(key);\n    if (fieldNumber !== rootSchema.schemaProp.fieldNumber) {\n        return [[], index];\n    }\n    const result = [];\n    if (Array.isArray(typeSchema)) {\n        const [nestedTypeSchema] = typeSchema;\n        if (nestedTypeSchema.schemaProp.type === 'object') {\n            while (message[index] === startingByte && index !== terminateIndex) {\n                const [, wire2KeySize] = varint_1.readUInt32(message, index);\n                index += wire2KeySize;\n                const [objectSize, objectSizeLength] = varint_1.readUInt32(message, index);\n                index += objectSizeLength;\n                if (objectSize === 0) {\n                    continue;\n                }\n                const terminatingObjectSize = index + objectSize;\n                const [res, nextOffset] = exports.readObject(message, index, typeSchema, terminatingObjectSize);\n                result.push(res);\n                index = nextOffset;\n            }\n            return [result, index];\n        }\n        throw new Error('Invalid container type');\n    }\n    if (typeSchema.schemaProp.dataType === 'string' || typeSchema.schemaProp.dataType === 'bytes') {\n        while (message[index] === startingByte && index !== terminateIndex) {\n            const [, wire2KeySize] = varint_1.readUInt32(message, index);\n            index += wire2KeySize;\n            const [wireType2Length, wireType2LengthSize] = varint_1.readUInt32(message, index);\n            if (wireType2Length === 0) {\n                if (typeSchema.schemaProp.dataType === 'string') {\n                    result.push('');\n                }\n                else {\n                    result.push(Buffer.alloc(0));\n                }\n                index += wireType2LengthSize;\n                continue;\n            }\n            const [res, wire2Size] = _readers[typeSchema.schemaProp.dataType](message, index);\n            result.push(res);\n            index += wire2Size;\n        }\n        return [result, index];\n    }\n    const [, keySize] = varint_1.readUInt32(message, index);\n    index += keySize;\n    const [arrayLength, wireType2Size] = varint_1.readUInt32(message, index);\n    index += wireType2Size;\n    const end = index + arrayLength;\n    while (index < end) {\n        const [res, size] = _readers[typeSchema.schemaProp.dataType](message, index);\n        result.push(res);\n        index += size;\n    }\n    return [result, index];\n};\nexports.readArray = readArray;\nconst writeArray = (compiledSchema, message, chunks) => {\n    if (message.length === 0) {\n        return [chunks, 0];\n    }\n    let totalSize = 0;\n    const [rootSchema, typeSchema] = compiledSchema;\n    if (Array.isArray(typeSchema)) {\n        for (let i = 0; i < message.length; i += 1) {\n            const [res, objectSize] = exports.writeObject(typeSchema, message[i], []);\n            chunks.push(rootSchema.binaryKey);\n            const size = _writers.uint32(objectSize);\n            chunks.push(size);\n            for (let j = 0; j < res.length; j += 1) {\n                chunks.push(res[j]);\n            }\n            totalSize += objectSize + size.length + rootSchema.binaryKey.length;\n        }\n        return [chunks, totalSize];\n    }\n    if (typeSchema.schemaProp.dataType === 'string' || typeSchema.schemaProp.dataType === 'bytes') {\n        for (let i = 0; i < message.length; i += 1) {\n            const res = _writers[typeSchema.schemaProp.dataType](message[i]);\n            chunks.push(rootSchema.binaryKey);\n            chunks.push(res);\n            totalSize += res.length + rootSchema.binaryKey.length;\n        }\n        return [chunks, totalSize];\n    }\n    chunks.push(rootSchema.binaryKey);\n    const contents = [];\n    let contentSize = 0;\n    for (let i = 0; i < message.length; i += 1) {\n        const res = _writers[typeSchema.schemaProp.dataType](message[i]);\n        contents.push(res);\n        contentSize += res.length;\n    }\n    const arrayLength = _writers.uint32(contentSize);\n    chunks.push(arrayLength);\n    for (let i = 0; i < contents.length; i += 1) {\n        chunks.push(contents[i]);\n    }\n    totalSize += rootSchema.binaryKey.length + contentSize + arrayLength.length;\n    return [chunks, totalSize];\n};\nexports.writeArray = writeArray;\n//# sourceMappingURL=collection.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./codec\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recursiveTypeCast = exports.iterator = void 0;\nconst mappers = {\n    toJSON: {\n        uint32: value => value,\n        sint32: value => value,\n        uint64: value => value.toString(),\n        sint64: value => value.toString(),\n        string: value => value,\n        bytes: value => value.toString('hex'),\n        boolean: value => value,\n    },\n    fromJSON: {\n        uint32: value => value,\n        sint32: value => value,\n        uint64: value => BigInt(value),\n        sint64: value => BigInt(value),\n        string: value => value,\n        bytes: value => Buffer.from(value, 'hex'),\n        boolean: value => value,\n    },\n};\nconst findObjectByPath = (message, pathArr) => {\n    let result = message;\n    for (let i = 0; i < pathArr.length; i += 1) {\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[pathArr[i]];\n        }\n        else if (result.items) {\n            const x = result.items.properties;\n            result = x[pathArr[i]];\n        }\n    }\n    return result;\n};\nconst isObject = (item) => typeof item === 'object' && item !== null && !Array.isArray(item) && !Buffer.isBuffer(item);\nconst iterator = function iterator() {\n    let index = 0;\n    const properties = Object.keys(this);\n    let Done = false;\n    return {\n        next: () => {\n            Done = index >= properties.length;\n            const obj = {\n                done: Done,\n                value: { value: this[properties[index]], key: properties[index] },\n            };\n            index += 1;\n            return obj;\n        },\n    };\n};\nexports.iterator = iterator;\nconst recursiveTypeCast = (mode, object, schema, dataPath) => {\n    var _a;\n    for (const { key, value } of object) {\n        if (isObject(value)) {\n            dataPath.push(key);\n            value[Symbol.iterator] = exports.iterator;\n            exports.recursiveTypeCast(mode, value, schema, dataPath);\n            dataPath.pop();\n            delete value[Symbol.iterator];\n        }\n        else if (Array.isArray(value)) {\n            dataPath.push(key);\n            const schemaProp = findObjectByPath(schema, dataPath);\n            if (((_a = schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {\n                for (let i = 0; i < value.length; i += 1) {\n                    const arrayObject = value[i];\n                    arrayObject[Symbol.iterator] = exports.iterator;\n                    exports.recursiveTypeCast(mode, arrayObject, schema, dataPath);\n                    delete arrayObject[Symbol.iterator];\n                }\n            }\n            else {\n                for (let i = 0; i < value.length; i += 1) {\n                    if (schemaProp === undefined || schemaProp.items === undefined) {\n                        throw new Error(`Invalid schema property found. Path: ${dataPath.join(',')}`);\n                    }\n                    object[key][i] = mappers[mode][schemaProp.items.dataType](value[i]);\n                }\n            }\n            dataPath.pop();\n        }\n        else {\n            dataPath.push(key);\n            const schemaProp = findObjectByPath(schema, dataPath);\n            if (schemaProp === undefined) {\n                throw new Error(`Invalid schema property found. Path: ${dataPath.join(',')}`);\n            }\n            object[key] = mappers[mode][schemaProp.dataType](value);\n            delete object[Symbol.iterator];\n            dataPath.pop();\n        }\n    }\n    delete object[Symbol.iterator];\n};\nexports.recursiveTypeCast = recursiveTypeCast;\n//# sourceMappingURL=json_wrapper.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readKey = void 0;\nconst WIRE_TYPE_TWO = 2;\nconst WIRE_TYPE_ZERO = 0;\nconst readKey = (value) => {\n    const wireType = value & 7;\n    if (wireType === WIRE_TYPE_TWO || wireType === WIRE_TYPE_ZERO) {\n        const fieldNumber = value >>> 3;\n        return [fieldNumber, wireType];\n    }\n    throw new Error('Value yields unsupported wireType');\n};\nexports.readKey = readKey;\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readString = exports.writeString = void 0;\nconst bytes_1 = require(\"./bytes\");\nconst writeString = (value) => {\n    const stringBuffer = Buffer.from(value, 'utf8');\n    return bytes_1.writeBytes(stringBuffer);\n};\nexports.writeString = writeString;\nconst readString = (buffer, offset) => {\n    const [value, size] = bytes_1.readBytes(buffer, offset);\n    return [value.toString('utf8'), size];\n};\nexports.readString = readString;\n//# sourceMappingURL=string.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultValue = void 0;\nconst getDefaultValue = (dataType) => {\n    switch (dataType) {\n        case 'string':\n            return '';\n        case 'boolean':\n            return false;\n        case 'bytes':\n            return Buffer.alloc(0);\n        case 'uint32':\n        case 'sint32':\n            return 0;\n        case 'uint64':\n        case 'sint64':\n            return BigInt(0);\n        default:\n            throw new Error('Invalid data type');\n    }\n};\nexports.getDefaultValue = getDefaultValue;\n//# sourceMappingURL=default_value.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findObjectByPath = void 0;\nconst findObjectByPath = (message, pathArr) => {\n    let result = message;\n    for (let i = 0; i < pathArr.length; i += 1) {\n        if (result[pathArr[i]] === undefined) {\n            return undefined;\n        }\n        result = result[pathArr[i]];\n    }\n    return result;\n};\nexports.findObjectByPath = findObjectByPath;\n//# sourceMappingURL=find_path.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./key\"), exports);\n__exportStar(require(\"./find_path\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateKey = void 0;\nconst varint_1 = require(\"../varint\");\nconst generateKey = (schemaProp) => {\n    var _a;\n    let wireType;\n    const dataType = (_a = schemaProp.dataType) !== null && _a !== void 0 ? _a : schemaProp.type;\n    switch (dataType) {\n        case 'bytes':\n        case 'string':\n        case 'object':\n        case 'array':\n            wireType = 2;\n            break;\n        default:\n            wireType = 0;\n            break;\n    }\n    const keyAsVarInt = varint_1.writeUInt32((schemaProp.fieldNumber << 3) | wireType);\n    return keyAsVarInt;\n};\nexports.generateKey = generateKey;\n//# sourceMappingURL=key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readSInt64 = exports.readSInt32 = exports.readUInt64 = exports.readUInt32 = exports.writeSInt64 = exports.writeUInt64 = exports.writeSInt32 = exports.writeUInt32 = void 0;\nconst msg = 0x80;\nconst rest = 0x7f;\nconst writeUInt32 = (value) => {\n    const result = [];\n    let index = 0;\n    while (value > rest) {\n        result[index] = msg | ((value & rest) >>> 0);\n        value = (value >>> 7) >>> 0;\n        index += 1;\n    }\n    result[index] = value;\n    return Buffer.from(result);\n};\nexports.writeUInt32 = writeUInt32;\nconst writeSInt32 = (value) => {\n    if (value >= 0) {\n        return exports.writeUInt32(2 * value);\n    }\n    return exports.writeUInt32(-2 * value - 1);\n};\nexports.writeSInt32 = writeSInt32;\nconst writeUInt64 = (value) => {\n    const result = [];\n    let index = 0;\n    while (value > BigInt(rest)) {\n        result[index] = Number(BigInt(msg) | (value & BigInt(rest)));\n        value >>= BigInt(7);\n        index += 1;\n    }\n    result[Number(index)] = Number(value);\n    return Buffer.from(result);\n};\nexports.writeUInt64 = writeUInt64;\nconst writeSInt64 = (value) => {\n    if (value >= BigInt(0)) {\n        return exports.writeUInt64(BigInt(2) * value);\n    }\n    return exports.writeUInt64(BigInt(-2) * value - BigInt(1));\n};\nexports.writeSInt64 = writeSInt64;\nconst readUInt32 = (buffer, offset) => {\n    let result = 0;\n    let index = offset;\n    for (let shift = 0; shift < 32; shift += 7) {\n        if (index >= buffer.length) {\n            throw new Error('Invalid buffer length');\n        }\n        const bit = buffer[index];\n        index += 1;\n        if (index === offset + 5 && bit > 0x0f) {\n            throw new Error('Value out of range of uint32');\n        }\n        result = (result | ((bit & rest) << shift)) >>> 0;\n        if ((bit & msg) === 0) {\n            return [result, index - offset];\n        }\n    }\n    throw new Error('Terminating bit not found');\n};\nexports.readUInt32 = readUInt32;\nconst readUInt64 = (buffer, offset) => {\n    let result = BigInt(0);\n    let index = offset;\n    for (let shift = BigInt(0); shift < BigInt(64); shift += BigInt(7)) {\n        if (index >= buffer.length) {\n            throw new Error('Invalid buffer length');\n        }\n        const bit = BigInt(buffer[index]);\n        index += 1;\n        if (index === 10 + offset && bit > 0x01) {\n            throw new Error('Value out of range of uint64');\n        }\n        result |= (bit & BigInt(rest)) << shift;\n        if ((bit & BigInt(msg)) === BigInt(0)) {\n            return [result, index - offset];\n        }\n    }\n    throw new Error('Terminating bit not found');\n};\nexports.readUInt64 = readUInt64;\nconst readSInt32 = (buffer, offset) => {\n    const [varInt, size] = exports.readUInt32(buffer, offset);\n    if (varInt % 2 === 0) {\n        return [varInt / 2, size];\n    }\n    return [-(varInt + 1) / 2, size];\n};\nexports.readSInt32 = readSInt32;\nconst readSInt64 = (buffer, offset) => {\n    const [varInt, size] = exports.readUInt64(buffer, offset);\n    if (varInt % BigInt(2) === BigInt(0)) {\n        return [varInt / BigInt(2), size];\n    }\n    return [-(varInt + BigInt(1)) / BigInt(2), size];\n};\nexports.readSInt64 = readSInt64;\n//# sourceMappingURL=varint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringToBuffer = exports.hexToBuffer = exports.bufferToHex = exports.intToBuffer = exports.LITTLE_ENDIAN = exports.BIG_ENDIAN = void 0;\nexports.BIG_ENDIAN = 'big';\nexports.LITTLE_ENDIAN = 'little';\nconst MAX_NUMBER_BYTE_LENGTH = 6;\nconst intToBuffer = (value, byteLength, endianness = exports.BIG_ENDIAN, signed = false) => {\n    if (![exports.BIG_ENDIAN, exports.LITTLE_ENDIAN].includes(endianness)) {\n        throw new Error(`Endianness must be either ${exports.BIG_ENDIAN} or ${exports.LITTLE_ENDIAN}`);\n    }\n    const buffer = Buffer.alloc(byteLength);\n    if (endianness === 'big') {\n        if (byteLength <= MAX_NUMBER_BYTE_LENGTH) {\n            if (signed) {\n                buffer.writeIntBE(Number(value), 0, byteLength);\n            }\n            else {\n                buffer.writeUIntBE(Number(value), 0, byteLength);\n            }\n        }\n        else {\n            if (signed) {\n                buffer.writeBigInt64BE(BigInt(value));\n            }\n            else {\n                buffer.writeBigUInt64BE(BigInt(value));\n            }\n        }\n    }\n    else {\n        if (byteLength <= MAX_NUMBER_BYTE_LENGTH) {\n            if (signed) {\n                buffer.writeIntLE(Number(value), 0, byteLength);\n            }\n            else {\n                buffer.writeUIntLE(Number(value), 0, byteLength);\n            }\n        }\n        else {\n            if (signed) {\n                buffer.writeBigInt64LE(BigInt(value));\n            }\n            else {\n                buffer.writeBigUInt64LE(BigInt(value));\n            }\n        }\n    }\n    return buffer;\n};\nexports.intToBuffer = intToBuffer;\nconst bufferToHex = (buffer) => Buffer.from(buffer).toString('hex');\nexports.bufferToHex = bufferToHex;\nconst hexRegex = /^[0-9a-f]+/i;\nconst hexToBuffer = (hex, argumentName = 'Argument') => {\n    var _a;\n    if (typeof hex !== 'string') {\n        throw new TypeError(`${argumentName} must be a string.`);\n    }\n    const matchedHex = ((_a = hex.match(hexRegex)) !== null && _a !== void 0 ? _a : [])[0];\n    if (!matchedHex || matchedHex.length !== hex.length) {\n        throw new TypeError(`${argumentName} must be a valid hex string.`);\n    }\n    if (matchedHex.length % 2 !== 0) {\n        throw new TypeError(`${argumentName} must have a valid length of hex string.`);\n    }\n    return Buffer.from(matchedHex, 'hex');\n};\nexports.hexToBuffer = hexToBuffer;\nconst stringToBuffer = (str) => Buffer.from(str, 'utf8');\nexports.stringToBuffer = stringToBuffer;\n//# sourceMappingURL=buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_BASE32_ADDRESS_PREFIX = exports.DEFAULT_LISK32_ADDRESS_PREFIX = exports.BINARY_ADDRESS_LENGTH = exports.SIGNED_MESSAGE_PREFIX = void 0;\nexports.SIGNED_MESSAGE_PREFIX = 'Lisk Signed Message:\\n';\nexports.BINARY_ADDRESS_LENGTH = 20;\nexports.DEFAULT_LISK32_ADDRESS_PREFIX = 'lsk';\nexports.DEFAULT_BASE32_ADDRESS_PREFIX = exports.DEFAULT_LISK32_ADDRESS_PREFIX;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEncryptedPassphrase = exports.stringifyEncryptedPassphrase = exports.convertPrivateKeyEd2Curve = exports.convertPublicKeyEd2Curve = exports.getFirstEightBytesReversed = exports.convertUInt5ToBase32 = exports.convertUIntArray = void 0;\nconst ed2curve = require(\"ed2curve\");\nconst querystring = require(\"querystring\");\nconst reverse = require(\"buffer-reverse\");\nconst CHARSET = 'zxvcpmbn3465o978uyrtkqew2adsjhfg';\nconst convertUIntArray = (uintArray, fromBits, toBits) => {\n    const maxValue = (1 << toBits) - 1;\n    let accumulator = 0;\n    let bits = 0;\n    const result = [];\n    for (let p = 0; p < uintArray.length; p += 1) {\n        const byte = uintArray[p];\n        if (byte < 0 || byte >> fromBits !== 0) {\n            return [];\n        }\n        accumulator = (accumulator << fromBits) | byte;\n        bits += fromBits;\n        while (bits >= toBits) {\n            bits -= toBits;\n            result.push((accumulator >> bits) & maxValue);\n        }\n    }\n    return result;\n};\nexports.convertUIntArray = convertUIntArray;\nconst convertUInt5ToBase32 = (uint5Array) => uint5Array.map((val) => CHARSET[val]).join('');\nexports.convertUInt5ToBase32 = convertUInt5ToBase32;\nconst getFirstEightBytesReversed = (input) => {\n    const BUFFER_SIZE = 8;\n    if (typeof input === 'string') {\n        return reverse(Buffer.from(input).slice(0, BUFFER_SIZE));\n    }\n    return reverse(Buffer.from(input).slice(0, BUFFER_SIZE));\n};\nexports.getFirstEightBytesReversed = getFirstEightBytesReversed;\nexports.convertPublicKeyEd2Curve = ed2curve.convertPublicKey;\nexports.convertPrivateKeyEd2Curve = ed2curve.convertSecretKey;\nconst stringifyEncryptedPassphrase = (encryptedPassphrase) => {\n    if (typeof encryptedPassphrase !== 'object' || encryptedPassphrase === null) {\n        throw new Error('Encrypted passphrase to stringify must be an object.');\n    }\n    const objectToStringify = encryptedPassphrase.iterations\n        ? encryptedPassphrase\n        : {\n            salt: encryptedPassphrase.salt,\n            cipherText: encryptedPassphrase.cipherText,\n            iv: encryptedPassphrase.iv,\n            tag: encryptedPassphrase.tag,\n            version: encryptedPassphrase.version,\n        };\n    return querystring.stringify(objectToStringify);\n};\nexports.stringifyEncryptedPassphrase = stringifyEncryptedPassphrase;\nconst parseIterations = (iterationsString) => {\n    const iterations = iterationsString === undefined ? undefined : parseInt(iterationsString, 10);\n    if (typeof iterations !== 'undefined' && Number.isNaN(iterations)) {\n        throw new Error('Could not parse iterations.');\n    }\n    return iterations;\n};\nconst parseEncryptedPassphrase = (encryptedPassphrase) => {\n    if (typeof encryptedPassphrase !== 'string') {\n        throw new Error('Encrypted passphrase to parse must be a string.');\n    }\n    const keyValuePairs = querystring.parse(encryptedPassphrase);\n    const { iterations, salt, cipherText, iv, tag, version } = keyValuePairs;\n    if ((typeof iterations !== 'string' && typeof iterations !== 'undefined') ||\n        typeof salt !== 'string' ||\n        typeof cipherText !== 'string' ||\n        typeof iv !== 'string' ||\n        typeof tag !== 'string' ||\n        typeof version !== 'string') {\n        throw new Error('Encrypted passphrase to parse must have only one value per key.');\n    }\n    return {\n        iterations: parseIterations(iterations),\n        salt,\n        cipherText,\n        iv,\n        tag,\n        version,\n    };\n};\nexports.parseEncryptedPassphrase = parseEncryptedPassphrase;\n//# sourceMappingURL=convert.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decryptPassphraseWithPassword = exports.encryptPassphraseWithPassword = exports.decryptMessageWithPassphrase = exports.encryptMessageWithPassphrase = void 0;\nconst crypto = require(\"crypto\");\nconst buffer_1 = require(\"./buffer\");\nconst convert_1 = require(\"./convert\");\nconst keys_1 = require(\"./keys\");\nconst nacl_1 = require(\"./nacl\");\nconst PBKDF2_ITERATIONS = 1e6;\nconst PBKDF2_KEYLEN = 32;\nconst PBKDF2_HASH_FUNCTION = 'sha256';\nconst ENCRYPTION_VERSION = '1';\nconst encryptMessageWithPassphrase = (message, passphrase, recipientPublicKey) => {\n    const { privateKey: senderPrivateKeyBytes } = keys_1.getPrivateAndPublicKeyFromPassphrase(passphrase);\n    const convertedPrivateKey = Buffer.from(convert_1.convertPrivateKeyEd2Curve(senderPrivateKeyBytes));\n    const messageInBytes = Buffer.from(message, 'utf8');\n    const nonceSize = 24;\n    const nonce = nacl_1.getRandomBytes(nonceSize);\n    const publicKeyUint8Array = convert_1.convertPublicKeyEd2Curve(recipientPublicKey);\n    if (publicKeyUint8Array === null) {\n        throw new Error('given public key is not a valid Ed25519 public key');\n    }\n    const convertedPublicKey = Buffer.from(publicKeyUint8Array);\n    const cipherBytes = nacl_1.box(messageInBytes, nonce, convertedPublicKey, convertedPrivateKey);\n    const nonceHex = buffer_1.bufferToHex(nonce);\n    const encryptedMessage = buffer_1.bufferToHex(cipherBytes);\n    return {\n        nonce: nonceHex,\n        encryptedMessage,\n    };\n};\nexports.encryptMessageWithPassphrase = encryptMessageWithPassphrase;\nconst decryptMessageWithPassphrase = (cipherHex, nonce, passphrase, senderPublicKey) => {\n    const { privateKey: recipientPrivateKeyBytes } = keys_1.getPrivateAndPublicKeyFromPassphrase(passphrase);\n    const convertedPrivateKey = Buffer.from(convert_1.convertPrivateKeyEd2Curve(recipientPrivateKeyBytes));\n    const cipherBytes = buffer_1.hexToBuffer(cipherHex);\n    const nonceBytes = buffer_1.hexToBuffer(nonce);\n    const publicKeyUint8Array = convert_1.convertPublicKeyEd2Curve(senderPublicKey);\n    if (publicKeyUint8Array === null) {\n        throw new Error('given public key is not a valid Ed25519 public key');\n    }\n    const convertedPublicKey = Buffer.from(publicKeyUint8Array);\n    try {\n        const decoded = nacl_1.openBox(cipherBytes, nonceBytes, convertedPublicKey, convertedPrivateKey);\n        return Buffer.from(decoded).toString();\n    }\n    catch (error) {\n        if (error.message.match(/bad nonce size|\"n\" must be crypto_box_NONCEBYTES bytes long/)) {\n            throw new Error('Expected nonce to be 24 bytes.');\n        }\n        throw new Error('Something went wrong during decryption. Is this the full encrypted message?');\n    }\n};\nexports.decryptMessageWithPassphrase = decryptMessageWithPassphrase;\nconst getKeyFromPassword = (password, salt, iterations) => crypto.pbkdf2Sync(password, salt, iterations, PBKDF2_KEYLEN, PBKDF2_HASH_FUNCTION);\nconst encryptAES256GCMWithPassword = (plainText, password, iterations = PBKDF2_ITERATIONS) => {\n    const IV_BUFFER_SIZE = 12;\n    const SALT_BUFFER_SIZE = 16;\n    const iv = crypto.randomBytes(IV_BUFFER_SIZE);\n    const salt = crypto.randomBytes(SALT_BUFFER_SIZE);\n    const key = getKeyFromPassword(password, salt, iterations);\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, iv);\n    const firstBlock = cipher.update(plainText, 'utf8');\n    const encrypted = Buffer.concat([firstBlock, cipher.final()]);\n    const tag = cipher.getAuthTag();\n    return {\n        iterations,\n        cipherText: encrypted.toString('hex'),\n        iv: iv.toString('hex'),\n        salt: salt.toString('hex'),\n        tag: tag.toString('hex'),\n        version: ENCRYPTION_VERSION,\n    };\n};\nconst getTagBuffer = (tag) => {\n    const TAG_BUFFER_SIZE = 16;\n    const tagBuffer = buffer_1.hexToBuffer(tag, 'Tag');\n    if (tagBuffer.length !== TAG_BUFFER_SIZE) {\n        throw new Error('Tag must be 16 bytes.');\n    }\n    return tagBuffer;\n};\nconst decryptAES256GCMWithPassword = (encryptedPassphrase, password) => {\n    const { iterations = PBKDF2_ITERATIONS, cipherText, iv, salt, tag } = encryptedPassphrase;\n    const tagBuffer = getTagBuffer(tag);\n    const key = getKeyFromPassword(password, buffer_1.hexToBuffer(salt, 'Salt'), iterations);\n    const decipher = crypto.createDecipheriv('aes-256-gcm', key, buffer_1.hexToBuffer(iv, 'IV'));\n    decipher.setAuthTag(tagBuffer);\n    const firstBlock = decipher.update(buffer_1.hexToBuffer(cipherText, 'Cipher text'));\n    const decrypted = Buffer.concat([firstBlock, decipher.final()]);\n    return decrypted.toString();\n};\nexports.encryptPassphraseWithPassword = encryptAES256GCMWithPassword;\nexports.decryptPassphraseWithPassword = decryptAES256GCMWithPassword;\n//# sourceMappingURL=encrypt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getNetworkIdentifier = exports.hash = void 0;\nconst crypto = require(\"crypto\");\nconst buffer_1 = require(\"./buffer\");\nconst cryptoHashSha256 = (data) => {\n    const dataHash = crypto.createHash('sha256');\n    dataHash.update(data);\n    return dataHash.digest();\n};\nconst hash = (data, format) => {\n    if (Buffer.isBuffer(data)) {\n        return cryptoHashSha256(data);\n    }\n    if (typeof data === 'string' && typeof format === 'string') {\n        if (!['utf8', 'hex'].includes(format)) {\n            throw new Error('Unsupported string format. Currently only `hex` and `utf8` are supported.');\n        }\n        const encoded = format === 'utf8' ? Buffer.from(data, 'utf8') : buffer_1.hexToBuffer(data);\n        return cryptoHashSha256(encoded);\n    }\n    throw new Error(`Unsupported data:${data} and format:${format !== null && format !== void 0 ? format : 'undefined'}. Currently only Buffers or hex and utf8 strings are supported.`);\n};\nexports.hash = hash;\nconst getNetworkIdentifier = (genesisBlockID, communityIdentifier) => exports.hash(Buffer.concat([genesisBlockID, Buffer.from(communityIdentifier, 'utf8')]));\nexports.getNetworkIdentifier = getNetworkIdentifier;\n//# sourceMappingURL=hash.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashOnion = exports.generateHashOnionSeed = void 0;\nconst hash_1 = require(\"./hash\");\nconst nacl_1 = require(\"./nacl\");\nconst HASH_SIZE = 16;\nconst INPUT_SIZE = 64;\nconst defaultCount = 1000000;\nconst defaultDistance = 1000;\nconst generateHashOnionSeed = () => hash_1.hash(nacl_1.getRandomBytes(INPUT_SIZE)).slice(0, HASH_SIZE);\nexports.generateHashOnionSeed = generateHashOnionSeed;\nconst hashOnion = (seed, count = defaultCount, distance = defaultDistance) => {\n    if (count < distance) {\n        throw new Error('Invalid count or distance. Count must be greater than distance');\n    }\n    if (count % distance !== 0) {\n        throw new Error('Invalid count. Count must be multiple of distance');\n    }\n    let previousHash = seed;\n    const hashes = [seed];\n    for (let i = 1; i <= count; i += 1) {\n        const nextHash = hash_1.hash(previousHash).slice(0, HASH_SIZE);\n        if (i % distance === 0) {\n            hashes.push(nextHash);\n        }\n        previousHash = nextHash;\n    }\n    return hashes.reverse();\n};\nexports.hashOnion = hashOnion;\n//# sourceMappingURL=hash_onion.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constants = exports.getPublicKey = exports.getRandomBytes = void 0;\nconst constants = require(\"./constants\");\nexports.constants = constants;\n__exportStar(require(\"./buffer\"), exports);\n__exportStar(require(\"./convert\"), exports);\n__exportStar(require(\"./encrypt\"), exports);\n__exportStar(require(\"./hash\"), exports);\n__exportStar(require(\"./keys\"), exports);\n__exportStar(require(\"./legacy_address\"), exports);\n__exportStar(require(\"./sign\"), exports);\n__exportStar(require(\"./hash_onion\"), exports);\nvar nacl_1 = require(\"./nacl\");\nObject.defineProperty(exports, \"getRandomBytes\", { enumerable: true, get: function () { return nacl_1.getRandomBytes; } });\nObject.defineProperty(exports, \"getPublicKey\", { enumerable: true, get: function () { return nacl_1.getPublicKey; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBase32AddressFromAddress = exports.getLisk32AddressFromAddress = exports.getAddressFromBase32Address = exports.getAddressFromLisk32Address = exports.validateBase32Address = exports.validateLisk32Address = exports.getBase32AddressFromPassphrase = exports.getLisk32AddressFromPassphrase = exports.getBase32AddressFromPublicKey = exports.getLisk32AddressFromPublicKey = exports.verifyChecksum = exports.createChecksum = exports.getAddressFromPrivateKey = exports.getAddressFromPassphrase = exports.getAddressAndPublicKeyFromPassphrase = exports.getAddressFromPublicKey = exports.getKeys = exports.getPrivateAndPublicKeyFromPassphrase = void 0;\nconst constants_1 = require(\"./constants\");\nconst convert_1 = require(\"./convert\");\nconst hash_1 = require(\"./hash\");\nconst nacl_1 = require(\"./nacl\");\nconst getPrivateAndPublicKeyFromPassphrase = (passphrase) => {\n    const hashed = hash_1.hash(passphrase, 'utf8');\n    return nacl_1.getKeyPair(hashed);\n};\nexports.getPrivateAndPublicKeyFromPassphrase = getPrivateAndPublicKeyFromPassphrase;\nexports.getKeys = exports.getPrivateAndPublicKeyFromPassphrase;\nconst getAddressFromPublicKey = (publicKey) => {\n    const buffer = hash_1.hash(publicKey);\n    const truncatedBuffer = buffer.slice(0, constants_1.BINARY_ADDRESS_LENGTH);\n    if (truncatedBuffer.length !== constants_1.BINARY_ADDRESS_LENGTH) {\n        throw new Error('The Lisk addresses must contains exactly 20 bytes');\n    }\n    return truncatedBuffer;\n};\nexports.getAddressFromPublicKey = getAddressFromPublicKey;\nconst getAddressAndPublicKeyFromPassphrase = (passphrase) => {\n    const { publicKey } = exports.getKeys(passphrase);\n    const address = exports.getAddressFromPublicKey(publicKey);\n    return {\n        address,\n        publicKey,\n    };\n};\nexports.getAddressAndPublicKeyFromPassphrase = getAddressAndPublicKeyFromPassphrase;\nconst getAddressFromPassphrase = (passphrase) => {\n    const { publicKey } = exports.getKeys(passphrase);\n    return exports.getAddressFromPublicKey(publicKey);\n};\nexports.getAddressFromPassphrase = getAddressFromPassphrase;\nconst getAddressFromPrivateKey = (privateKey) => {\n    const publicKey = nacl_1.getPublicKey(privateKey);\n    return exports.getAddressFromPublicKey(publicKey);\n};\nexports.getAddressFromPrivateKey = getAddressFromPrivateKey;\nconst GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nconst polymod = (uint5Array) => {\n    let chk = 1;\n    for (const value of uint5Array) {\n        const top = chk >> 25;\n        chk = ((chk & 0x1ffffff) << 5) ^ value;\n        for (let i = 0; i < 5; i += 1) {\n            if ((top >> i) & 1) {\n                chk ^= GENERATOR[i];\n            }\n        }\n    }\n    return chk;\n};\nconst createChecksum = (uint5Array) => {\n    const values = uint5Array.concat([0, 0, 0, 0, 0, 0]);\n    const mod = polymod(values) ^ 1;\n    const result = [];\n    for (let p = 0; p < 6; p += 1) {\n        result.push((mod >> (5 * (5 - p))) & 31);\n    }\n    return result;\n};\nexports.createChecksum = createChecksum;\nconst verifyChecksum = (integerSequence) => polymod(integerSequence) === 1;\nexports.verifyChecksum = verifyChecksum;\nconst addressToLisk32 = (address) => {\n    const byteSequence = [];\n    for (const b of address) {\n        byteSequence.push(b);\n    }\n    const uint5Address = convert_1.convertUIntArray(byteSequence, 8, 5);\n    const uint5Checksum = exports.createChecksum(uint5Address);\n    return convert_1.convertUInt5ToBase32(uint5Address.concat(uint5Checksum));\n};\nconst getLisk32AddressFromPublicKey = (publicKey, prefix = constants_1.DEFAULT_LISK32_ADDRESS_PREFIX) => `${prefix}${addressToLisk32(exports.getAddressFromPublicKey(publicKey))}`;\nexports.getLisk32AddressFromPublicKey = getLisk32AddressFromPublicKey;\nexports.getBase32AddressFromPublicKey = exports.getLisk32AddressFromPublicKey;\nconst getLisk32AddressFromPassphrase = (passphrase, prefix = constants_1.DEFAULT_LISK32_ADDRESS_PREFIX) => {\n    const { publicKey } = exports.getAddressAndPublicKeyFromPassphrase(passphrase);\n    return exports.getLisk32AddressFromPublicKey(publicKey, prefix);\n};\nexports.getLisk32AddressFromPassphrase = getLisk32AddressFromPassphrase;\nexports.getBase32AddressFromPassphrase = exports.getLisk32AddressFromPassphrase;\nconst LISK32_ADDRESS_LENGTH = 41;\nconst LISK32_CHARSET = 'zxvcpmbn3465o978uyrtkqew2adsjhfg';\nconst validateLisk32Address = (address, prefix = constants_1.DEFAULT_LISK32_ADDRESS_PREFIX) => {\n    if (address.length !== LISK32_ADDRESS_LENGTH) {\n        throw new Error('Address length does not match requirements. Expected 41 characters.');\n    }\n    const addressPrefix = address.substring(0, 3);\n    if (addressPrefix !== prefix) {\n        throw new Error(`Invalid address prefix. Actual prefix: ${addressPrefix}, Expected prefix: ${prefix}`);\n    }\n    const addressSubstringArray = address.substring(3).split('');\n    if (!addressSubstringArray.every(char => LISK32_CHARSET.includes(char))) {\n        throw new Error(\"Invalid character found in address. Only allow characters: 'abcdefghjkmnopqrstuvwxyz23456789'.\");\n    }\n    const integerSequence = addressSubstringArray.map(char => LISK32_CHARSET.indexOf(char));\n    if (!exports.verifyChecksum(integerSequence)) {\n        throw new Error('Invalid checksum for address.');\n    }\n    return true;\n};\nexports.validateLisk32Address = validateLisk32Address;\nexports.validateBase32Address = exports.validateLisk32Address;\nconst getAddressFromLisk32Address = (base32Address, prefix = constants_1.DEFAULT_LISK32_ADDRESS_PREFIX) => {\n    exports.validateLisk32Address(base32Address, prefix);\n    const base32AddressNoPrefixNoChecksum = base32Address.substring(prefix.length, base32Address.length - 6);\n    const addressArray = base32AddressNoPrefixNoChecksum.split('');\n    const integerSequence = addressArray.map(char => LISK32_CHARSET.indexOf(char));\n    const integerSequence8 = convert_1.convertUIntArray(integerSequence, 5, 8);\n    return Buffer.from(integerSequence8);\n};\nexports.getAddressFromLisk32Address = getAddressFromLisk32Address;\nexports.getAddressFromBase32Address = exports.getAddressFromLisk32Address;\nconst getLisk32AddressFromAddress = (address, prefix = constants_1.DEFAULT_LISK32_ADDRESS_PREFIX) => `${prefix}${addressToLisk32(address)}`;\nexports.getLisk32AddressFromAddress = getLisk32AddressFromAddress;\nexports.getBase32AddressFromAddress = exports.getLisk32AddressFromAddress;\n//# sourceMappingURL=keys.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLegacyAddressFromPrivateKey = exports.getLegacyAddressFromPassphrase = exports.getLegacyAddressAndPublicKeyFromPassphrase = exports.getLegacyAddressFromPublicKey = void 0;\nconst hash_1 = require(\"./hash\");\nconst keys_1 = require(\"./keys\");\nconst convert_1 = require(\"./convert\");\nconst nacl_1 = require(\"./nacl\");\nconst getLegacyAddressFromPublicKey = (publicKey) => {\n    const publicKeyHash = hash_1.hash(publicKey);\n    const publicKeyTransform = convert_1.getFirstEightBytesReversed(publicKeyHash);\n    return `${publicKeyTransform.readBigUInt64BE().toString()}L`;\n};\nexports.getLegacyAddressFromPublicKey = getLegacyAddressFromPublicKey;\nconst getLegacyAddressAndPublicKeyFromPassphrase = (passphrase) => {\n    const { publicKey } = keys_1.getKeys(passphrase);\n    const address = exports.getLegacyAddressFromPublicKey(publicKey);\n    return {\n        address,\n        publicKey,\n    };\n};\nexports.getLegacyAddressAndPublicKeyFromPassphrase = getLegacyAddressAndPublicKeyFromPassphrase;\nconst getLegacyAddressFromPassphrase = (passphrase) => {\n    const { publicKey } = keys_1.getKeys(passphrase);\n    return exports.getLegacyAddressFromPublicKey(publicKey);\n};\nexports.getLegacyAddressFromPassphrase = getLegacyAddressFromPassphrase;\nconst getLegacyAddressFromPrivateKey = (privateKey) => {\n    const publicKey = nacl_1.getPublicKey(privateKey);\n    return exports.getLegacyAddressFromPublicKey(publicKey);\n};\nexports.getLegacyAddressFromPrivateKey = getLegacyAddressFromPrivateKey;\n//# sourceMappingURL=legacy_address.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPublicKey = exports.getKeyPair = exports.getRandomBytes = exports.verifyDetached = exports.signDetached = exports.openBox = exports.box = exports.NACL_SIGN_SIGNATURE_LENGTH = exports.NACL_SIGN_PUBLICKEY_LENGTH = void 0;\nlet lib = require('./slow');\ntry {\n    if (process.env.NACL_FAST !== 'disable') {\n        lib = require('./fast');\n    }\n}\ncatch (err) { }\nexports.NACL_SIGN_PUBLICKEY_LENGTH = 32;\nexports.NACL_SIGN_SIGNATURE_LENGTH = 64;\nexports.box = lib.box, exports.openBox = lib.openBox, exports.signDetached = lib.signDetached, exports.verifyDetached = lib.verifyDetached, exports.getRandomBytes = lib.getRandomBytes, exports.getKeyPair = lib.getKeyPair, exports.getPublicKey = lib.getPublicKey;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPublicKey = exports.getKeyPair = exports.getRandomBytes = exports.verifyDetached = exports.signDetached = exports.openBox = exports.box = void 0;\nconst tweetnacl = require(\"tweetnacl\");\nconst box = (messageInBytes, nonceInBytes, convertedPublicKey, convertedPrivateKey) => Buffer.from(tweetnacl.box(Uint8Array.from(messageInBytes), Uint8Array.from(nonceInBytes), Uint8Array.from(convertedPublicKey), Uint8Array.from(convertedPrivateKey)));\nexports.box = box;\nconst openBox = (cipherBytes, nonceBytes, convertedPublicKey, convertedPrivateKey) => {\n    const originalMessage = tweetnacl.box.open(Uint8Array.from(cipherBytes), Uint8Array.from(nonceBytes), Uint8Array.from(convertedPublicKey), Uint8Array.from(convertedPrivateKey));\n    if (originalMessage === null) {\n        throw new Error('Failed to decrypt message');\n    }\n    return Buffer.from(originalMessage);\n};\nexports.openBox = openBox;\nconst signDetached = (messageBytes, privateKeyBytes) => Buffer.from(tweetnacl.sign.detached(Uint8Array.from(messageBytes), Uint8Array.from(privateKeyBytes)));\nexports.signDetached = signDetached;\nconst verifyDetached = (messageBytes, signatureBytes, publicKeyBytes) => tweetnacl.sign.detached.verify(Uint8Array.from(messageBytes), Uint8Array.from(signatureBytes), Uint8Array.from(publicKeyBytes));\nexports.verifyDetached = verifyDetached;\nconst getRandomBytes = length => Buffer.from(tweetnacl.randomBytes(length));\nexports.getRandomBytes = getRandomBytes;\nconst getKeyPair = hashedSeed => {\n    const { publicKey, secretKey } = tweetnacl.sign.keyPair.fromSeed(Uint8Array.from(hashedSeed));\n    return {\n        privateKey: Buffer.from(secretKey),\n        publicKey: Buffer.from(publicKey),\n    };\n};\nexports.getKeyPair = getKeyPair;\nconst PRIVATE_KEY_LENGTH = 32;\nconst getPublicKey = privateKey => {\n    const { publicKey } = tweetnacl.sign.keyPair.fromSeed(Uint8Array.from(privateKey.slice(0, PRIVATE_KEY_LENGTH)));\n    return Buffer.from(publicKey);\n};\nexports.getPublicKey = getPublicKey;\n//# sourceMappingURL=slow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyData = exports.signData = exports.signDataWithPassphrase = exports.signDataWithPrivateKey = exports.signAndPrintMessage = exports.printSignedMessage = exports.verifyMessageWithPublicKey = exports.signMessageWithPassphrase = exports.digestMessage = void 0;\nconst varuint_bitcoin_1 = require(\"varuint-bitcoin\");\nconst constants_1 = require(\"./constants\");\nconst hash_1 = require(\"./hash\");\nconst keys_1 = require(\"./keys\");\nconst nacl_1 = require(\"./nacl\");\nconst createHeader = (text) => `-----${text}-----`;\nconst signedMessageHeader = createHeader('BEGIN LISK SIGNED MESSAGE');\nconst messageHeader = createHeader('MESSAGE');\nconst publicKeyHeader = createHeader('PUBLIC KEY');\nconst signatureHeader = createHeader('SIGNATURE');\nconst signatureFooter = createHeader('END LISK SIGNED MESSAGE');\nconst SIGNED_MESSAGE_PREFIX_BYTES = Buffer.from(constants_1.SIGNED_MESSAGE_PREFIX, 'utf8');\nconst SIGNED_MESSAGE_PREFIX_LENGTH = varuint_bitcoin_1.encode(constants_1.SIGNED_MESSAGE_PREFIX.length);\nconst digestMessage = (message) => {\n    const msgBytes = Buffer.from(message, 'utf8');\n    const msgLenBytes = varuint_bitcoin_1.encode(message.length);\n    const dataBytes = Buffer.concat([\n        SIGNED_MESSAGE_PREFIX_LENGTH,\n        SIGNED_MESSAGE_PREFIX_BYTES,\n        msgLenBytes,\n        msgBytes,\n    ]);\n    return hash_1.hash(hash_1.hash(dataBytes));\n};\nexports.digestMessage = digestMessage;\nconst signMessageWithPassphrase = (message, passphrase) => {\n    const msgBytes = exports.digestMessage(message);\n    const { privateKey, publicKey } = keys_1.getPrivateAndPublicKeyFromPassphrase(passphrase);\n    const signature = nacl_1.signDetached(msgBytes, privateKey);\n    return {\n        message,\n        publicKey,\n        signature,\n    };\n};\nexports.signMessageWithPassphrase = signMessageWithPassphrase;\nconst verifyMessageWithPublicKey = ({ message, publicKey, signature, }) => {\n    const msgBytes = exports.digestMessage(message);\n    if (publicKey.length !== nacl_1.NACL_SIGN_PUBLICKEY_LENGTH) {\n        throw new Error(`Invalid publicKey, expected ${nacl_1.NACL_SIGN_PUBLICKEY_LENGTH.toString()}-byte publicKey`);\n    }\n    if (signature.length !== nacl_1.NACL_SIGN_SIGNATURE_LENGTH) {\n        throw new Error(`Invalid signature length, expected ${nacl_1.NACL_SIGN_SIGNATURE_LENGTH.toString()}-byte signature`);\n    }\n    return nacl_1.verifyDetached(msgBytes, signature, publicKey);\n};\nexports.verifyMessageWithPublicKey = verifyMessageWithPublicKey;\nconst printSignedMessage = ({ message, signature, publicKey }) => [\n    signedMessageHeader,\n    messageHeader,\n    message,\n    publicKeyHeader,\n    publicKey.toString('hex'),\n    signatureHeader,\n    signature.toString('hex'),\n    signatureFooter,\n]\n    .filter(Boolean)\n    .join('\\n');\nexports.printSignedMessage = printSignedMessage;\nconst signAndPrintMessage = (message, passphrase) => {\n    const signedMessage = exports.signMessageWithPassphrase(message, passphrase);\n    return exports.printSignedMessage(signedMessage);\n};\nexports.signAndPrintMessage = signAndPrintMessage;\nconst signDataWithPrivateKey = (data, privateKey) => nacl_1.signDetached(data, privateKey);\nexports.signDataWithPrivateKey = signDataWithPrivateKey;\nconst signDataWithPassphrase = (data, passphrase) => {\n    const { privateKey } = keys_1.getPrivateAndPublicKeyFromPassphrase(passphrase);\n    return exports.signDataWithPrivateKey(data, privateKey);\n};\nexports.signDataWithPassphrase = signDataWithPassphrase;\nexports.signData = exports.signDataWithPassphrase;\nconst verifyData = (data, signature, publicKey) => nacl_1.verifyDetached(data, signature, publicKey);\nexports.verifyData = verifyData;\n//# sourceMappingURL=sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validation = exports.Mnemonic = void 0;\nconst Mnemonic = require(\"bip39\");\nexports.Mnemonic = Mnemonic;\nconst validation = require(\"./validation\");\nexports.validation = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPassphraseValidationErrors = exports.locateConsecutiveWhitespaces = exports.locateUppercaseCharacters = exports.countUppercaseCharacters = exports.countPassphraseWords = exports.countPassphraseWhitespaces = void 0;\nconst Mnemonic = require(\"bip39\");\nconst passphraseRegularExpression = {\n    uppercaseRegExp: /[A-Z]/g,\n    whitespaceRegExp: /\\s/g,\n};\nconst countPassphraseWhitespaces = (passphrase) => {\n    const whitespaceMatches = passphrase.match(passphraseRegularExpression.whitespaceRegExp);\n    return whitespaceMatches !== null ? whitespaceMatches.length : 0;\n};\nexports.countPassphraseWhitespaces = countPassphraseWhitespaces;\nconst countPassphraseWords = (passphrase) => passphrase.split(' ').filter(Boolean).length;\nexports.countPassphraseWords = countPassphraseWords;\nconst countUppercaseCharacters = (passphrase) => {\n    const uppercaseCharacterMatches = passphrase.match(passphraseRegularExpression.uppercaseRegExp);\n    return uppercaseCharacterMatches !== null ? uppercaseCharacterMatches.length : 0;\n};\nexports.countUppercaseCharacters = countUppercaseCharacters;\nconst locateUppercaseCharacters = (passphrase) => passphrase\n    .split('')\n    .reduce((upperCaseIndexes, character, index) => {\n    if (character.match(passphraseRegularExpression.uppercaseRegExp) !== null) {\n        return [...upperCaseIndexes, index];\n    }\n    return upperCaseIndexes;\n}, []);\nexports.locateUppercaseCharacters = locateUppercaseCharacters;\nconst locateConsecutiveWhitespaces = (passphrase) => passphrase\n    .split('')\n    .reduce((whitespaceIndexes, character, index) => {\n    if (index === 0 && character.match(passphraseRegularExpression.whitespaceRegExp) !== null) {\n        return [...whitespaceIndexes, index];\n    }\n    if (index !== passphrase.length - 1 &&\n        character.match(passphraseRegularExpression.whitespaceRegExp) !== null &&\n        passphrase.split('')[index - 1].match(passphraseRegularExpression.whitespaceRegExp) !== null) {\n        return [...whitespaceIndexes, index];\n    }\n    if (index === passphrase.length - 1 &&\n        character.match(passphraseRegularExpression.whitespaceRegExp) !== null) {\n        return [...whitespaceIndexes, index];\n    }\n    return whitespaceIndexes;\n}, []);\nexports.locateConsecutiveWhitespaces = locateConsecutiveWhitespaces;\nconst getPassphraseValidationErrors = (passphrase, wordlists, expectedWords = 12) => {\n    const expectedWhitespaces = expectedWords - 1;\n    const expectedUppercaseCharacterCount = 0;\n    const wordsInPassphrase = exports.countPassphraseWords(passphrase);\n    const whiteSpacesInPassphrase = exports.countPassphraseWhitespaces(passphrase);\n    const uppercaseCharacterInPassphrase = exports.countUppercaseCharacters(passphrase);\n    const passphraseWordError = {\n        actual: wordsInPassphrase,\n        code: 'INVALID_AMOUNT_OF_WORDS',\n        expected: expectedWords,\n        message: `Passphrase contains ${wordsInPassphrase.toString()} words instead of expected ${expectedWords.toString()}. Please check the passphrase.`,\n    };\n    const whiteSpaceError = {\n        actual: whiteSpacesInPassphrase,\n        code: 'INVALID_AMOUNT_OF_WHITESPACES',\n        expected: expectedWhitespaces,\n        location: exports.locateConsecutiveWhitespaces(passphrase),\n        message: `Passphrase contains ${whiteSpacesInPassphrase.toString()} whitespaces instead of expected ${expectedWhitespaces.toString()}. Please check the passphrase.`,\n    };\n    const uppercaseCharacterError = {\n        actual: uppercaseCharacterInPassphrase,\n        code: 'INVALID_AMOUNT_OF_UPPERCASE_CHARACTER',\n        expected: expectedUppercaseCharacterCount,\n        location: exports.locateUppercaseCharacters(passphrase),\n        message: `Passphrase contains ${uppercaseCharacterInPassphrase.toString()} uppercase character instead of expected ${expectedUppercaseCharacterCount.toString()}. Please check the passphrase.`,\n    };\n    const validationError = {\n        actual: false,\n        code: 'INVALID_MNEMONIC',\n        expected: true,\n        message: 'Passphrase is not a valid mnemonic passphrase. Please check the passphrase.',\n    };\n    const finalWordList = wordlists !== undefined ? [...wordlists] : Mnemonic.wordlists.english;\n    return [passphraseWordError, whiteSpaceError, uppercaseCharacterError, validationError].reduce((errorArray, error) => {\n        if (error.code === passphraseWordError.code && wordsInPassphrase !== expectedWords) {\n            return [...errorArray, error];\n        }\n        if (error.code === whiteSpaceError.code && whiteSpacesInPassphrase !== expectedWhitespaces) {\n            return [...errorArray, error];\n        }\n        if (error.code === uppercaseCharacterError.code &&\n            uppercaseCharacterInPassphrase !== expectedUppercaseCharacterCount) {\n            return [...errorArray, error];\n        }\n        if (error.code === validationError.code &&\n            !Mnemonic.validateMnemonic(passphrase, finalWordList)) {\n            return [...errorArray, error];\n        }\n        return errorArray;\n    }, []);\n};\nexports.getPassphraseValidationErrors = getPassphraseValidationErrors;\n//# sourceMappingURL=validation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeMinFee = void 0;\nconst sign_1 = require(\"./sign\");\nconst DEFAULT_MIN_FEE_PER_BYTE = 1000;\nconst DEFAULT_NUMBER_OF_SIGNATURES = 1;\nconst DEFAULT_BASE_FEE = '0';\nconst DEFAULT_SIGNATURE_BYTE_SIZE = 64;\nconst computeTransactionMinFee = (assetSchema, trx, options) => {\n    var _a, _b, _c, _d, _e;\n    const mockSignatures = new Array((_a = options === null || options === void 0 ? void 0 : options.numberOfSignatures) !== null && _a !== void 0 ? _a : DEFAULT_NUMBER_OF_SIGNATURES).fill(Buffer.alloc(DEFAULT_SIGNATURE_BYTE_SIZE));\n    if (options === null || options === void 0 ? void 0 : options.numberOfEmptySignatures) {\n        mockSignatures.push(...new Array(options.numberOfEmptySignatures).fill(Buffer.alloc(0)));\n    }\n    const size = sign_1.getBytes(assetSchema, {\n        ...trx,\n        signatures: mockSignatures,\n    }).length;\n    const baseFee = (_d = (_c = (_b = options === null || options === void 0 ? void 0 : options.baseFees) === null || _b === void 0 ? void 0 : _b.find(bf => bf.moduleID === trx.moduleID && bf.assetID === trx.assetID)) === null || _c === void 0 ? void 0 : _c.baseFee) !== null && _d !== void 0 ? _d : DEFAULT_BASE_FEE;\n    return BigInt(size * ((_e = options === null || options === void 0 ? void 0 : options.minFeePerByte) !== null && _e !== void 0 ? _e : DEFAULT_MIN_FEE_PER_BYTE)) + BigInt(baseFee);\n};\nconst computeMinFee = (assetSchema, trx, options) => {\n    const { fee, ...trxWithoutFee } = trx;\n    trxWithoutFee.fee = BigInt(0);\n    let minFee = computeTransactionMinFee(assetSchema, trxWithoutFee, options);\n    while (minFee > BigInt(trxWithoutFee.fee)) {\n        trxWithoutFee.fee = minFee;\n        minFee = computeTransactionMinFee(assetSchema, trxWithoutFee, options);\n    }\n    return minFee;\n};\nexports.computeMinFee = computeMinFee;\n//# sourceMappingURL=fee.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertLSKToBeddows = exports.convertBeddowsToLSK = void 0;\nconst lisk_validator_1 = require(\"@liskhq/lisk-validator\");\nconst FIXED_POINT = 10 ** 8;\nconst LISK_MAX_DECIMAL_POINTS = 8;\nconst getDecimalPlaces = (amount) => (amount.split('.')[1] || '').length;\nconst convertBeddowsToLSK = (beddowsAmount) => {\n    if (typeof beddowsAmount !== 'string') {\n        throw new Error('Cannot convert non-string amount');\n    }\n    if (getDecimalPlaces(beddowsAmount)) {\n        throw new Error('Beddows amount should not have decimal points');\n    }\n    const beddowsAmountBigInt = BigInt(beddowsAmount);\n    if (beddowsAmountBigInt > lisk_validator_1.MAX_UINT64) {\n        throw new Error('Beddows amount out of range');\n    }\n    const int = (beddowsAmountBigInt / BigInt(FIXED_POINT)).toString();\n    const floating = Number(beddowsAmountBigInt % BigInt(FIXED_POINT)) / FIXED_POINT;\n    const floatingPointsSplit = floating\n        .toLocaleString('en-US', {\n        maximumFractionDigits: LISK_MAX_DECIMAL_POINTS,\n    })\n        .split('.')[1];\n    const res = floating !== 0 ? `${int}.${floatingPointsSplit}` : int;\n    return res;\n};\nexports.convertBeddowsToLSK = convertBeddowsToLSK;\nconst convertLSKToBeddows = (lskAmount) => {\n    var _a;\n    if (typeof lskAmount !== 'string') {\n        throw new Error('Cannot convert non-string amount');\n    }\n    if (getDecimalPlaces(lskAmount) > LISK_MAX_DECIMAL_POINTS) {\n        throw new Error('LSK amount has too many decimal points');\n    }\n    const splitAmount = lskAmount.split('.');\n    const liskAmountInt = BigInt(splitAmount[0]);\n    const liskAmountFloatBigInt = BigInt(((_a = splitAmount[1]) !== null && _a !== void 0 ? _a : '0').padEnd(LISK_MAX_DECIMAL_POINTS, '0'));\n    const beddowsAmountBigInt = liskAmountInt * BigInt(FIXED_POINT) + liskAmountFloatBigInt;\n    if (beddowsAmountBigInt > lisk_validator_1.MAX_UINT64) {\n        throw new Error('LSK amount out of range');\n    }\n    return beddowsAmountBigInt.toString();\n};\nexports.convertLSKToBeddows = convertLSKToBeddows;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTransaction = exports.signTransactionWithPrivateKey = exports.signMultiSignatureTransactionWithPrivateKey = exports.signMultiSignatureTransaction = exports.signTransaction = exports.getSigningBytes = exports.getBytes = exports.convertLSKToBeddows = exports.convertBeddowsToLSK = exports.computeMinFee = void 0;\nvar fee_1 = require(\"./fee\");\nObject.defineProperty(exports, \"computeMinFee\", { enumerable: true, get: function () { return fee_1.computeMinFee; } });\nvar format_1 = require(\"./format\");\nObject.defineProperty(exports, \"convertBeddowsToLSK\", { enumerable: true, get: function () { return format_1.convertBeddowsToLSK; } });\nObject.defineProperty(exports, \"convertLSKToBeddows\", { enumerable: true, get: function () { return format_1.convertLSKToBeddows; } });\nvar sign_1 = require(\"./sign\");\nObject.defineProperty(exports, \"getBytes\", { enumerable: true, get: function () { return sign_1.getBytes; } });\nObject.defineProperty(exports, \"getSigningBytes\", { enumerable: true, get: function () { return sign_1.getSigningBytes; } });\nObject.defineProperty(exports, \"signTransaction\", { enumerable: true, get: function () { return sign_1.signTransaction; } });\nObject.defineProperty(exports, \"signMultiSignatureTransaction\", { enumerable: true, get: function () { return sign_1.signMultiSignatureTransaction; } });\nObject.defineProperty(exports, \"signMultiSignatureTransactionWithPrivateKey\", { enumerable: true, get: function () { return sign_1.signMultiSignatureTransactionWithPrivateKey; } });\nObject.defineProperty(exports, \"signTransactionWithPrivateKey\", { enumerable: true, get: function () { return sign_1.signTransactionWithPrivateKey; } });\nvar validate_1 = require(\"./validate\");\nObject.defineProperty(exports, \"validateTransaction\", { enumerable: true, get: function () { return validate_1.validateTransaction; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baseTransactionSchema = void 0;\nexports.baseTransactionSchema = {\n    $id: 'lisk/base-transaction',\n    type: 'object',\n    required: ['moduleID', 'assetID', 'nonce', 'fee', 'senderPublicKey', 'asset'],\n    properties: {\n        moduleID: {\n            dataType: 'uint32',\n            fieldNumber: 1,\n        },\n        assetID: {\n            dataType: 'uint32',\n            fieldNumber: 2,\n        },\n        nonce: {\n            dataType: 'uint64',\n            fieldNumber: 3,\n        },\n        fee: {\n            dataType: 'uint64',\n            fieldNumber: 4,\n        },\n        senderPublicKey: {\n            dataType: 'bytes',\n            fieldNumber: 5,\n        },\n        asset: {\n            dataType: 'bytes',\n            fieldNumber: 6,\n        },\n        signatures: {\n            type: 'array',\n            items: {\n                dataType: 'bytes',\n            },\n            fieldNumber: 7,\n        },\n    },\n};\n//# sourceMappingURL=schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signMultiSignatureTransactionWithPrivateKey = exports.signTransactionWithPrivateKey = exports.signMultiSignatureTransaction = exports.signTransaction = exports.getBytes = exports.getSigningBytes = void 0;\nconst lisk_codec_1 = require(\"@liskhq/lisk-codec\");\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nconst validate_1 = require(\"./validate\");\nconst schema_1 = require(\"./schema\");\nconst getSigningBytes = (assetSchema, transactionObject) => {\n    const validationErrors = validate_1.validateTransaction(assetSchema, transactionObject);\n    if (validationErrors) {\n        throw validationErrors;\n    }\n    if (typeof transactionObject.asset !== 'object' || transactionObject.asset === null) {\n        throw new Error('Asset must be of type object and not null');\n    }\n    const assetBytes = lisk_codec_1.codec.encode(assetSchema, transactionObject.asset);\n    const transactionBytes = lisk_codec_1.codec.encode(schema_1.baseTransactionSchema, {\n        ...transactionObject,\n        asset: assetBytes,\n        signatures: [],\n    });\n    return transactionBytes;\n};\nexports.getSigningBytes = getSigningBytes;\nconst getBytes = (assetSchema, transactionObject) => {\n    if (typeof transactionObject.asset !== 'object' || transactionObject.asset === null) {\n        throw new Error('Asset must be of type object and not null');\n    }\n    const assetBytes = lisk_codec_1.codec.encode(assetSchema, transactionObject.asset);\n    const transactionBytes = lisk_codec_1.codec.encode(schema_1.baseTransactionSchema, {\n        ...transactionObject,\n        asset: assetBytes,\n    });\n    return transactionBytes;\n};\nexports.getBytes = getBytes;\nconst signTransaction = (assetSchema, transactionObject, networkIdentifier, passphrase) => {\n    if (!networkIdentifier.length) {\n        throw new Error('Network identifier is required to sign a transaction');\n    }\n    if (!passphrase) {\n        throw new Error('Passphrase is required to sign a transaction');\n    }\n    const validationErrors = validate_1.validateTransaction(assetSchema, transactionObject);\n    if (validationErrors) {\n        throw validationErrors;\n    }\n    const { publicKey } = lisk_cryptography_1.getAddressAndPublicKeyFromPassphrase(passphrase);\n    if (!Buffer.isBuffer(transactionObject.senderPublicKey) ||\n        !transactionObject.senderPublicKey.equals(publicKey)) {\n        throw new Error('Transaction senderPublicKey does not match public key from passphrase');\n    }\n    const transactionWithNetworkIdentifierBytes = Buffer.concat([\n        networkIdentifier,\n        exports.getSigningBytes(assetSchema, transactionObject),\n    ]);\n    const signature = lisk_cryptography_1.signData(transactionWithNetworkIdentifierBytes, passphrase);\n    transactionObject.signatures = [signature];\n    return { ...transactionObject, id: lisk_cryptography_1.hash(exports.getBytes(assetSchema, transactionObject)) };\n};\nexports.signTransaction = signTransaction;\nconst sanitizeSignaturesArray = (transactionObject, keys, includeSenderSignature) => {\n    const numberOfSignatures = (includeSenderSignature ? 1 : 0) + keys.mandatoryKeys.length + keys.optionalKeys.length;\n    for (let i = 0; i < numberOfSignatures; i += 1) {\n        if (Array.isArray(transactionObject.signatures) &&\n            transactionObject.signatures[i] === undefined) {\n            transactionObject.signatures[i] = Buffer.alloc(0);\n        }\n    }\n};\nconst signMultiSignatureTransaction = (assetSchema, transactionObject, networkIdentifier, passphrase, keys, includeSenderSignature = false) => {\n    if (!networkIdentifier.length) {\n        throw new Error('Network identifier is required to sign a transaction');\n    }\n    if (!passphrase) {\n        throw new Error('Passphrase is required to sign a transaction');\n    }\n    if (!Array.isArray(transactionObject.signatures)) {\n        throw new Error('Signatures must be of type array');\n    }\n    const validationErrors = validate_1.validateTransaction(assetSchema, transactionObject);\n    if (validationErrors) {\n        throw validationErrors;\n    }\n    keys.mandatoryKeys.sort((publicKeyA, publicKeyB) => publicKeyA.compare(publicKeyB));\n    keys.optionalKeys.sort((publicKeyA, publicKeyB) => publicKeyA.compare(publicKeyB));\n    const { publicKey } = lisk_cryptography_1.getAddressAndPublicKeyFromPassphrase(passphrase);\n    const transactionWithNetworkIdentifierBytes = Buffer.concat([\n        networkIdentifier,\n        exports.getSigningBytes(assetSchema, transactionObject),\n    ]);\n    const signature = lisk_cryptography_1.signData(transactionWithNetworkIdentifierBytes, passphrase);\n    if (includeSenderSignature &&\n        Buffer.isBuffer(transactionObject.senderPublicKey) &&\n        publicKey.equals(transactionObject.senderPublicKey)) {\n        transactionObject.signatures[0] = signature;\n    }\n    const mandatoryKeyIndex = keys.mandatoryKeys.findIndex(aPublicKey => aPublicKey.equals(publicKey));\n    const optionalKeyIndex = keys.optionalKeys.findIndex(aPublicKey => aPublicKey.equals(publicKey));\n    if (mandatoryKeyIndex !== -1) {\n        const signatureOffset = includeSenderSignature ? 1 : 0;\n        transactionObject.signatures[mandatoryKeyIndex + signatureOffset] = signature;\n    }\n    if (optionalKeyIndex !== -1) {\n        const signatureOffset = includeSenderSignature ? 1 : 0;\n        transactionObject.signatures[keys.mandatoryKeys.length + optionalKeyIndex + signatureOffset] = signature;\n    }\n    sanitizeSignaturesArray(transactionObject, keys, includeSenderSignature);\n    return { ...transactionObject, id: lisk_cryptography_1.hash(exports.getBytes(assetSchema, transactionObject)) };\n};\nexports.signMultiSignatureTransaction = signMultiSignatureTransaction;\nconst signTransactionWithPrivateKey = (assetSchema, transactionObject, networkIdentifier, privateKey) => {\n    if (!networkIdentifier.length) {\n        throw new Error('Network identifier is required to sign a transaction');\n    }\n    if (!privateKey.length || privateKey.length !== 64) {\n        throw new Error('Private key must be 64 bytes');\n    }\n    const validationErrors = validate_1.validateTransaction(assetSchema, transactionObject);\n    if (validationErrors) {\n        throw validationErrors;\n    }\n    const transactionWithNetworkIdentifierBytes = Buffer.concat([\n        networkIdentifier,\n        exports.getSigningBytes(assetSchema, transactionObject),\n    ]);\n    const signature = lisk_cryptography_1.signDataWithPrivateKey(transactionWithNetworkIdentifierBytes, privateKey);\n    transactionObject.signatures = [signature];\n    return { ...transactionObject, id: lisk_cryptography_1.hash(exports.getBytes(assetSchema, transactionObject)) };\n};\nexports.signTransactionWithPrivateKey = signTransactionWithPrivateKey;\nconst signMultiSignatureTransactionWithPrivateKey = (assetSchema, transactionObject, networkIdentifier, privateKey, keys, includeSenderSignature = false) => {\n    if (!networkIdentifier.length) {\n        throw new Error('Network identifier is required to sign a transaction');\n    }\n    if (!privateKey.length || privateKey.length !== 64) {\n        throw new Error('Private key must be 64 bytes');\n    }\n    if (!Array.isArray(transactionObject.signatures)) {\n        throw new Error('Signatures must be of type array');\n    }\n    const validationErrors = validate_1.validateTransaction(assetSchema, transactionObject);\n    if (validationErrors) {\n        throw validationErrors;\n    }\n    keys.mandatoryKeys.sort((publicKeyA, publicKeyB) => publicKeyA.compare(publicKeyB));\n    keys.optionalKeys.sort((publicKeyA, publicKeyB) => publicKeyA.compare(publicKeyB));\n    const transactionWithNetworkIdentifierBytes = Buffer.concat([\n        networkIdentifier,\n        exports.getSigningBytes(assetSchema, transactionObject),\n    ]);\n    const signature = lisk_cryptography_1.signDataWithPrivateKey(transactionWithNetworkIdentifierBytes, privateKey);\n    const signerPublicKey = lisk_cryptography_1.getPublicKey(privateKey);\n    if (includeSenderSignature &&\n        Buffer.isBuffer(transactionObject.senderPublicKey) &&\n        signerPublicKey.equals(transactionObject.senderPublicKey)) {\n        transactionObject.signatures[0] = signature;\n    }\n    const mandatoryKeyIndex = keys.mandatoryKeys.findIndex(aPublicKey => aPublicKey.equals(signerPublicKey));\n    const optionalKeyIndex = keys.optionalKeys.findIndex(aPublicKey => aPublicKey.equals(signerPublicKey));\n    if (mandatoryKeyIndex !== -1) {\n        const signatureOffset = includeSenderSignature ? 1 : 0;\n        transactionObject.signatures[mandatoryKeyIndex + signatureOffset] = signature;\n    }\n    if (optionalKeyIndex !== -1) {\n        const signatureOffset = includeSenderSignature ? 1 : 0;\n        transactionObject.signatures[keys.mandatoryKeys.length + optionalKeyIndex + signatureOffset] = signature;\n    }\n    sanitizeSignaturesArray(transactionObject, keys, includeSenderSignature);\n    return { ...transactionObject, id: lisk_cryptography_1.hash(exports.getBytes(assetSchema, transactionObject)) };\n};\nexports.signMultiSignatureTransactionWithPrivateKey = signMultiSignatureTransactionWithPrivateKey;\n//# sourceMappingURL=sign.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTransaction = void 0;\nconst lisk_validator_1 = require(\"@liskhq/lisk-validator\");\nconst schema_1 = require(\"./schema\");\nconst validateTransaction = (assetSchema, transactionObject) => {\n    const transactionObjectWithEmptyAsset = {\n        ...transactionObject,\n        asset: Buffer.alloc(0),\n    };\n    const schemaErrors = lisk_validator_1.validator.validate(schema_1.baseTransactionSchema, transactionObjectWithEmptyAsset);\n    if (schemaErrors.length) {\n        return new lisk_validator_1.LiskValidationError([...schemaErrors]);\n    }\n    if (typeof transactionObject.asset !== 'object' || transactionObject.asset === null) {\n        return new Error('Transaction object asset must be of type object and not null');\n    }\n    const assetSchemaErrors = lisk_validator_1.validator.validate(assetSchema, transactionObject.asset);\n    if (assetSchemaErrors.length) {\n        return new lisk_validator_1.LiskValidationError([...assetSchemaErrors]);\n    }\n    return undefined;\n};\nexports.validateTransaction = validateTransaction;\n//# sourceMappingURL=validate.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_HASH_SIZE = exports.NODE_INDEX_SIZE = exports.LAYER_INDEX_SIZE = exports.BRANCH_PREFIX = exports.LEAF_PREFIX = exports.EMPTY_HASH = void 0;\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nexports.EMPTY_HASH = lisk_cryptography_1.hash(Buffer.alloc(0));\nexports.LEAF_PREFIX = Buffer.from('00', 'hex');\nexports.BRANCH_PREFIX = Buffer.from('01', 'hex');\nexports.LAYER_INDEX_SIZE = 1;\nexports.NODE_INDEX_SIZE = 8;\nexports.NODE_HASH_SIZE = 32;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./merkle_tree\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./verify_proof\"), exports);\n__exportStar(require(\"./constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleTree = void 0;\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"./utils\");\nclass MerkleTree {\n    constructor(initValues = [], options) {\n        var _a, _b;\n        this._width = 0;\n        this._hashToValueMap = {};\n        this._locationToHashMap = {};\n        if (initValues.length <= 1) {\n            const rootNode = initValues.length\n                ? this._generateLeaf(initValues[0], 0)\n                : { hash: constants_1.EMPTY_HASH, value: Buffer.alloc(0) };\n            this._root = rootNode.hash;\n            this._hashToValueMap[this._root.toString('binary')] = rootNode.value;\n            this._locationToHashMap[`${utils_1.getBinaryString(0, this._getHeight())}`] = this._root;\n            this._width = initValues.length ? 1 : 0;\n            this._preHashedLeaf = (_a = options === null || options === void 0 ? void 0 : options.preHashedLeaf) !== null && _a !== void 0 ? _a : false;\n            return;\n        }\n        this._preHashedLeaf = (_b = options === null || options === void 0 ? void 0 : options.preHashedLeaf) !== null && _b !== void 0 ? _b : false;\n        this._root = this._build(initValues);\n    }\n    get root() {\n        return this._root;\n    }\n    getNode(nodeHash) {\n        const value = this._hashToValueMap[nodeHash.toString('binary')];\n        if (!value) {\n            throw new Error(`Hash does not exist in merkle tree: ${nodeHash.toString('hex')}`);\n        }\n        const type = utils_1.isLeaf(value) ? \"leaf\" : \"branch\";\n        const layerIndex = type === \"leaf\" ? 0 : value.readInt8(constants_1.BRANCH_PREFIX.length);\n        const nodeIndex = type === \"branch\"\n            ? value.readInt32BE(constants_1.BRANCH_PREFIX.length + constants_1.LAYER_INDEX_SIZE)\n            : value.readInt32BE(constants_1.LEAF_PREFIX.length);\n        const rightHash = type === \"branch\" ? value.slice(-1 * constants_1.NODE_HASH_SIZE) : Buffer.alloc(0);\n        const leftHash = type === \"branch\"\n            ? value.slice(-2 * constants_1.NODE_HASH_SIZE, -1 * constants_1.NODE_HASH_SIZE)\n            : Buffer.alloc(0);\n        return {\n            type,\n            hash: nodeHash,\n            value,\n            layerIndex,\n            nodeIndex,\n            rightHash,\n            leftHash,\n        };\n    }\n    append(value) {\n        if (this._width === 0) {\n            const leaf = this._generateLeaf(value, 0);\n            this._root = leaf.hash;\n            this._width += 1;\n            return this._root;\n        }\n        const appendPath = [];\n        let currentNode = this.getNode(this._root);\n        if (this._width === 2 ** (this._getHeight() - 1)) {\n            appendPath.push(currentNode);\n        }\n        else {\n            while (true) {\n                const currentLayer = currentNode.layerIndex;\n                let currentLayerSize = this._width >> currentLayer;\n                if (currentLayerSize % 2 === 1 && currentNode.nodeIndex % 2 === 0) {\n                    appendPath.push(currentNode);\n                }\n                if (currentNode.type === \"leaf\") {\n                    break;\n                }\n                currentLayerSize = this._width >> (currentLayer - 1);\n                if (currentLayerSize % 2 === 1) {\n                    const leftNode = this.getNode(currentNode.leftHash);\n                    appendPath.push(leftNode);\n                }\n                currentNode = this.getNode(currentNode.rightHash);\n            }\n        }\n        const appendData = this._generateLeaf(value, this._width);\n        const appendNode = this.getNode(appendData.hash);\n        appendPath.push(appendNode);\n        while (appendPath.length > 1) {\n            const rightNodeInfo = appendPath.pop();\n            const leftNodeInfo = appendPath.pop();\n            const newBranchNode = this._generateBranch(leftNodeInfo.hash, rightNodeInfo.hash, leftNodeInfo.layerIndex + 1, leftNodeInfo.nodeIndex + 1);\n            appendPath.push(this.getNode(newBranchNode.hash));\n        }\n        this._root = appendPath[0].hash;\n        return this.root;\n    }\n    generateProof(queryData) {\n        if (this._width === 0) {\n            return {\n                path: [],\n                indexes: [],\n                dataLength: 0,\n            };\n        }\n        const path = [];\n        const addedPath = new lisk_utils_1.dataStructures.BufferSet();\n        const indexes = [];\n        let queryNode;\n        for (let i = 0; i < queryData.length; i += 1) {\n            try {\n                queryNode = this.getNode(queryData[i]);\n            }\n            catch (err) {\n                path.push({\n                    hash: queryData[i],\n                    layerIndex: undefined,\n                    nodeIndex: undefined,\n                });\n                indexes.push({\n                    layerIndex: undefined,\n                    nodeIndex: undefined,\n                });\n                continue;\n            }\n            if (this._width === 1 && this._root.equals(queryNode.hash)) {\n                if (!addedPath.has(queryNode.hash)) {\n                    addedPath.add(queryNode.hash);\n                    path.push({\n                        hash: queryNode.hash,\n                        layerIndex: 0,\n                        nodeIndex: 0,\n                    });\n                    indexes.push({\n                        layerIndex: 0,\n                        nodeIndex: 0,\n                    });\n                }\n                continue;\n            }\n            indexes.push({\n                layerIndex: queryNode.layerIndex,\n                nodeIndex: queryNode.nodeIndex,\n            });\n            let currentNode = queryNode;\n            while (!currentNode.hash.equals(this._root)) {\n                const { layerIndex: pairLayerIndex, nodeIndex: pairNodeIndex, side: pairSide, } = utils_1.getPairLocation({\n                    layerIndex: currentNode.layerIndex,\n                    nodeIndex: currentNode.nodeIndex,\n                    dataLength: this._width,\n                });\n                const pairNodeHash = this._locationToHashMap[`${utils_1.getBinaryString(pairNodeIndex, this._getHeight() - pairLayerIndex)}`];\n                if (!addedPath.has(pairNodeHash)) {\n                    addedPath.add(pairNodeHash);\n                    path.push({\n                        hash: pairNodeHash,\n                        layerIndex: pairLayerIndex,\n                        nodeIndex: pairNodeIndex,\n                    });\n                }\n                const leftHashBuffer = pairSide === 0 ? pairNodeHash : currentNode.hash;\n                const rightHashBuffer = pairSide === 1 ? pairNodeHash : currentNode.hash;\n                const parentNodeHash = utils_1.generateHash(constants_1.BRANCH_PREFIX, leftHashBuffer, rightHashBuffer);\n                currentNode = this.getNode(parentNodeHash);\n            }\n        }\n        return {\n            path,\n            indexes,\n            dataLength: this._width,\n        };\n    }\n    clear() {\n        this._width = 0;\n        this._root = constants_1.EMPTY_HASH;\n        this._hashToValueMap = { [this._root.toString('2')]: Buffer.alloc(0) };\n    }\n    toString() {\n        if (this._width === 0) {\n            return this.root.toString('hex');\n        }\n        return this._printNode(this.root);\n    }\n    getData() {\n        return this._width === 0\n            ? []\n            : Object.keys(this._hashToValueMap).map(key => this.getNode(Buffer.from(key, 'binary')));\n    }\n    _getHeight() {\n        return Math.ceil(Math.log2(this._width)) + 1;\n    }\n    _generateLeaf(value, nodeIndex) {\n        const nodeIndexBuffer = Buffer.alloc(constants_1.NODE_INDEX_SIZE);\n        nodeIndexBuffer.writeInt32BE(nodeIndex, 0);\n        const leafValueWithoutNodeIndex = Buffer.concat([constants_1.LEAF_PREFIX, value], constants_1.LEAF_PREFIX.length + value.length);\n        const leafHash = this._preHashedLeaf ? value : lisk_cryptography_1.hash(leafValueWithoutNodeIndex);\n        const leafValueWithNodeIndex = Buffer.concat([constants_1.LEAF_PREFIX, nodeIndexBuffer, value], constants_1.LEAF_PREFIX.length + nodeIndexBuffer.length + value.length);\n        this._hashToValueMap[leafHash.toString('binary')] = leafValueWithNodeIndex;\n        this._locationToHashMap[`${utils_1.getBinaryString(nodeIndex, this._getHeight())}`] = leafHash;\n        return {\n            value: leafValueWithNodeIndex,\n            hash: leafHash,\n        };\n    }\n    _generateBranch(leftHashBuffer, rightHashBuffer, layerIndex, nodeIndex) {\n        const layerIndexBuffer = Buffer.alloc(constants_1.LAYER_INDEX_SIZE);\n        const nodeIndexBuffer = Buffer.alloc(constants_1.NODE_INDEX_SIZE);\n        layerIndexBuffer.writeInt8(layerIndex, 0);\n        nodeIndexBuffer.writeInt32BE(nodeIndex, 0);\n        const branchValue = Buffer.concat([constants_1.BRANCH_PREFIX, layerIndexBuffer, nodeIndexBuffer, leftHashBuffer, rightHashBuffer], constants_1.BRANCH_PREFIX.length +\n            layerIndexBuffer.length +\n            nodeIndexBuffer.length +\n            leftHashBuffer.length +\n            rightHashBuffer.length);\n        const branchHash = utils_1.generateHash(constants_1.BRANCH_PREFIX, leftHashBuffer, rightHashBuffer);\n        this._hashToValueMap[branchHash.toString('binary')] = branchValue;\n        this._locationToHashMap[`${utils_1.getBinaryString(nodeIndex, this._getHeight() - layerIndex)}`] = branchHash;\n        return {\n            hash: branchHash,\n            value: branchValue,\n        };\n    }\n    _build(initValues) {\n        const leafHashes = [];\n        this._width = initValues.length;\n        for (let i = 0; i < initValues.length; i += 1) {\n            const leaf = this._generateLeaf(initValues[i], i);\n            leafHashes.push(leaf.hash);\n        }\n        let currentLayerIndex = 0;\n        let currentLayerHashes = leafHashes;\n        let orphanNodeHashInPreviousLayer;\n        while (currentLayerHashes.length > 1 || orphanNodeHashInPreviousLayer !== undefined) {\n            const pairsOfHashes = [];\n            for (let i = 0; i < currentLayerHashes.length - 1; i += 2) {\n                pairsOfHashes.push([currentLayerHashes[i], currentLayerHashes[i + 1]]);\n            }\n            if (currentLayerHashes.length % 2 === 1) {\n                if (orphanNodeHashInPreviousLayer === undefined) {\n                    orphanNodeHashInPreviousLayer = currentLayerHashes[currentLayerHashes.length - 1];\n                }\n                else {\n                    pairsOfHashes.push([\n                        currentLayerHashes[currentLayerHashes.length - 1],\n                        orphanNodeHashInPreviousLayer,\n                    ]);\n                    orphanNodeHashInPreviousLayer = undefined;\n                }\n            }\n            const parentLayerHashes = [];\n            for (let i = 0; i < pairsOfHashes.length; i += 1) {\n                const leftHash = pairsOfHashes[i][0];\n                const rightHash = pairsOfHashes[i][1];\n                const node = this._generateBranch(leftHash, rightHash, currentLayerIndex + 1, i);\n                parentLayerHashes.push(node.hash);\n            }\n            currentLayerHashes = parentLayerHashes;\n            currentLayerIndex += 1;\n        }\n        return currentLayerHashes[0];\n    }\n    _printNode(hashValue, level = 1) {\n        const nodeValue = this._hashToValueMap[hashValue.toString('binary')];\n        if (nodeValue && utils_1.isLeaf(nodeValue)) {\n            return hashValue.toString('hex');\n        }\n        const node = this.getNode(hashValue);\n        return [\n            hashValue.toString('hex'),\n            `├${' ─ '.repeat(level)} ${this._printNode(node.leftHash, level + 1)}`,\n            `├${' ─ '.repeat(level)} ${this._printNode(node.rightHash, level + 1)}`,\n        ].join('\\n');\n    }\n}\nexports.MerkleTree = MerkleTree;\n//# sourceMappingURL=merkle_tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPairLocation = exports.getBinary = exports.getBinaryString = exports.getLayerStructure = exports.getMaxIdxAtLayer = exports.generateHash = exports.isLeaf = void 0;\nconst lisk_cryptography_1 = require(\"@liskhq/lisk-cryptography\");\nconst constants_1 = require(\"./constants\");\nconst isLeaf = (value) => value[0] === constants_1.LEAF_PREFIX[0];\nexports.isLeaf = isLeaf;\nconst generateHash = (prefix, leftHash, rightHash) => lisk_cryptography_1.hash(Buffer.concat([prefix, leftHash, rightHash], prefix.length + leftHash.length + rightHash.length));\nexports.generateHash = generateHash;\nconst getMaxIdxAtLayer = (layer, dataLength) => {\n    let [max, r] = [dataLength, 0];\n    for (let i = 0; i < layer; i += 1) {\n        [max, r] = [[Math.floor, Math.ceil][r % 2](max / 2), r + (max % 2)];\n    }\n    return max;\n};\nexports.getMaxIdxAtLayer = getMaxIdxAtLayer;\nconst getLayerStructure = (dataLength) => {\n    const structure = [];\n    for (let i = 0; i <= Math.ceil(Math.log2(dataLength)); i += 1) {\n        structure.push(exports.getMaxIdxAtLayer(i, dataLength));\n    }\n    return structure;\n};\nexports.getLayerStructure = getLayerStructure;\nconst getBinaryString = (num, length) => {\n    if (length === 0) {\n        return '';\n    }\n    let binaryString = num.toString(2);\n    while (binaryString.length < length)\n        binaryString = `0${binaryString}`;\n    return binaryString;\n};\nexports.getBinaryString = getBinaryString;\nconst getBinary = (num, length) => {\n    const binaryString = exports.getBinaryString(num, length);\n    return binaryString.split('').map(d => parseInt(d, 10));\n};\nexports.getBinary = getBinary;\nconst getPairLocation = (nodeInfo) => {\n    const { layerIndex, nodeIndex, dataLength } = nodeInfo;\n    const treeHeight = Math.ceil(Math.log2(dataLength)) + 1;\n    const layerStructure = exports.getLayerStructure(dataLength);\n    const numberOfNodesInLayer = layerStructure[layerIndex];\n    const binary = exports.getBinary(nodeIndex, treeHeight - layerIndex);\n    const side = [0, 1][binary[binary.length - 1]];\n    const pairSide = side === 0 ? 1 : 0;\n    if (layerIndex + 1 === treeHeight) {\n        return { layerIndex: treeHeight - 1, nodeIndex: 0 };\n    }\n    if (side === 0 && nodeIndex < numberOfNodesInLayer - 1) {\n        const pairNodeIndex = nodeIndex + 1;\n        return { layerIndex, nodeIndex: pairNodeIndex, side: pairSide };\n    }\n    if (side === 1 &&\n        ((numberOfNodesInLayer % 2 === 0 && nodeIndex === numberOfNodesInLayer - 1) ||\n            (nodeIndex < numberOfNodesInLayer - 1 && nodeIndex < numberOfNodesInLayer - 1))) {\n        const pairNodeIndex = nodeIndex - 1;\n        return { layerIndex, nodeIndex: pairNodeIndex, side: pairSide };\n    }\n    let currentLayer = layerIndex;\n    const numOfOddLayers = layerStructure\n        .slice(0, currentLayer)\n        .filter(num => num % 2 !== 0)\n        .reduce((acc, val) => acc + val, 0);\n    const direction = numOfOddLayers % 2 === 0 ? 1 : -1;\n    let pairLocation;\n    currentLayer += direction;\n    while (currentLayer >= 0 && currentLayer <= treeHeight - 1) {\n        if (layerStructure[currentLayer] % 2 !== 0) {\n            const pairNodeIndex = direction === 1\n                ? layerStructure[currentLayer] + direction * -1\n                : layerStructure[currentLayer] - direction * -1;\n            pairLocation = {\n                layerIndex: currentLayer,\n                nodeIndex: pairNodeIndex,\n                side: direction === -1 ? 1 : 0,\n            };\n            break;\n        }\n        currentLayer += direction;\n    }\n    return pairLocation;\n};\nexports.getPairLocation = getPairLocation;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifyProof = void 0;\nconst lisk_utils_1 = require(\"@liskhq/lisk-utils\");\nconst constants_1 = require(\"./constants\");\nconst utils_1 = require(\"./utils\");\nconst verifyProof = (options) => {\n    const { path, indexes, dataLength } = options.proof;\n    const treeHeight = Math.ceil(Math.log2(dataLength)) + 1;\n    const results = new lisk_utils_1.dataStructures.BufferMap();\n    if (dataLength === 0 || options.queryData.length === 0) {\n        return [{ hash: options.rootHash, verified: true }];\n    }\n    const locationToPathMap = {};\n    for (const p of path) {\n        if (p.layerIndex !== undefined && p.nodeIndex !== undefined) {\n            locationToPathMap[`${utils_1.getBinaryString(p.nodeIndex, treeHeight - p.layerIndex)}`] = p.hash;\n        }\n    }\n    for (let i = 0; i < options.queryData.length; i += 1) {\n        const queryHash = options.queryData[i];\n        let { nodeIndex, layerIndex } = indexes[i];\n        if (nodeIndex === undefined || layerIndex === undefined) {\n            results.set(queryHash, false);\n            continue;\n        }\n        if (dataLength === 1) {\n            if (path.some(p => p.hash.equals(queryHash))) {\n                results.set(queryHash, true);\n            }\n            else {\n                results.set(queryHash, false);\n            }\n            continue;\n        }\n        let currentHash = queryHash;\n        while (layerIndex !== treeHeight) {\n            const { layerIndex: pairLayerIndex, nodeIndex: pairNodeIndex, side: pairSide, } = utils_1.getPairLocation({ layerIndex, nodeIndex, dataLength });\n            const nextPath = locationToPathMap[`${utils_1.getBinaryString(pairNodeIndex, treeHeight - pairLayerIndex)}`];\n            if (nextPath === undefined) {\n                break;\n            }\n            const leftHashBuffer = pairSide === 0 ? nextPath : currentHash;\n            const rightHashBuffer = pairSide === 1 ? nextPath : currentHash;\n            currentHash = utils_1.generateHash(constants_1.BRANCH_PREFIX, leftHashBuffer, rightHashBuffer);\n            layerIndex = pairLayerIndex > layerIndex ? pairLayerIndex + 1 : layerIndex + 1;\n            nodeIndex =\n                dataLength === 2 ** (treeHeight - 1)\n                    ? Math.floor(pairNodeIndex / 2)\n                    : Math.floor(pairNodeIndex / 2 ** (layerIndex - pairLayerIndex));\n        }\n        if (!currentHash.equals(options.rootHash)) {\n            results.set(queryHash, false);\n            continue;\n        }\n        results.set(queryHash, true);\n    }\n    return results.entries().map(result => ({ hash: result[0], verified: result[1] }));\n};\nexports.verifyProof = verifyProof;\n//# sourceMappingURL=verify_proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BufferMap = void 0;\nconst buffer_string_1 = require(\"./buffer_string\");\nconst cloneDeep = require(\"lodash.clonedeep\");\nclass BufferMap {\n    constructor(data) {\n        this._data = {};\n        this._data = data !== null && data !== void 0 ? data : {};\n    }\n    get size() {\n        return Object.keys(this._data).length;\n    }\n    get(key) {\n        return this._data[buffer_string_1.keyString(key)];\n    }\n    delete(key) {\n        delete this._data[buffer_string_1.keyString(key)];\n    }\n    set(key, value) {\n        this._data[buffer_string_1.keyString(key)] = value;\n    }\n    has(key) {\n        return this._data[buffer_string_1.keyString(key)] !== undefined;\n    }\n    clone() {\n        return new BufferMap(cloneDeep(this._data));\n    }\n    entries() {\n        return Object.entries(this._data).map(([key, value]) => [\n            Buffer.from(key, 'binary'),\n            value,\n        ]);\n    }\n    values() {\n        return Object.values(this._data);\n    }\n}\nexports.BufferMap = BufferMap;\n//# sourceMappingURL=buffer_map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BufferSet = void 0;\nconst buffer_string_1 = require(\"./buffer_string\");\nconst cloneDeep = require(\"lodash.clonedeep\");\nclass BufferSet {\n    constructor(data) {\n        this._data = {};\n        this._data = {};\n        if (data) {\n            for (const d of data) {\n                this.add(d);\n            }\n        }\n    }\n    delete(key) {\n        delete this._data[buffer_string_1.keyString(key)];\n    }\n    add(value) {\n        this._data[buffer_string_1.keyString(value)] = value;\n    }\n    has(value) {\n        return this._data[buffer_string_1.keyString(value)] !== undefined;\n    }\n    clone() {\n        return new BufferSet(cloneDeep(Object.values(this._data)));\n    }\n    get size() {\n        return Object.keys(this._data).length;\n    }\n    [Symbol.iterator]() {\n        let index = -1;\n        const data = Object.values(this._data);\n        return {\n            next: () => {\n                index += 1;\n                return {\n                    value: data[index],\n                    done: !(index in data),\n                };\n            },\n        };\n    }\n}\nexports.BufferSet = BufferSet;\n//# sourceMappingURL=buffer_set.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keyReadableString = exports.keyString = void 0;\nconst keyString = (key) => key.toString('binary');\nexports.keyString = keyString;\nconst keyReadableString = (key) => key.toString('hex');\nexports.keyReadableString = keyReadableString;\n//# sourceMappingURL=buffer_string.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./buffer_map\"), exports);\n__exportStar(require(\"./buffer_set\"), exports);\n__exportStar(require(\"./max_heap\"), exports);\n__exportStar(require(\"./min_heap\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MaxHeap = void 0;\nconst min_heap_1 = require(\"./min_heap\");\nclass MaxHeap extends min_heap_1.MinHeap {\n    _moveUp(originalIndex) {\n        let index = originalIndex;\n        const node = this._nodes[index];\n        while (index > 0) {\n            const parentIndex = this._parentIndex(index);\n            if (this._nodes[parentIndex].key < node.key) {\n                this._nodes[index] = this._nodes[parentIndex];\n                index = parentIndex;\n                continue;\n            }\n            break;\n        }\n        this._nodes[index] = node;\n    }\n    _moveDown(originalIndex) {\n        let index = originalIndex;\n        const node = this._nodes[index];\n        const halfCount = this.count >> 1;\n        while (index < halfCount) {\n            const leftChild = this._leftChildIndex(index);\n            const rightChild = this._rightChildIndex(index);\n            const nextPath = rightChild < this.count && this._nodes[rightChild].key > this._nodes[leftChild].key\n                ? rightChild\n                : leftChild;\n            if (this._nodes[nextPath].key < node.key) {\n                break;\n            }\n            this._nodes[index] = this._nodes[nextPath];\n            index = nextPath;\n        }\n        this._nodes[index] = node;\n    }\n}\nexports.MaxHeap = MaxHeap;\n//# sourceMappingURL=max_heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinHeap = void 0;\nconst node_1 = require(\"./node\");\nclass MinHeap {\n    constructor(heap) {\n        this._nodes = [];\n        if (heap) {\n            this._insertAll(heap);\n        }\n    }\n    push(key, value) {\n        const node = new node_1.Node(key, value);\n        this._nodes.push(node);\n        this._moveUp(this._nodes.length - 1);\n    }\n    pop() {\n        if (this.count <= 0) {\n            return undefined;\n        }\n        if (this.count === 1) {\n            const node = this._nodes[0];\n            this.clear();\n            return node;\n        }\n        const rootNode = this._nodes[0];\n        this._nodes[0] = this._nodes.pop();\n        this._moveDown(0);\n        return rootNode;\n    }\n    peek() {\n        if (this._nodes.length <= 0) {\n            return undefined;\n        }\n        return this._nodes[0];\n    }\n    clone() {\n        return new MinHeap(this);\n    }\n    clear() {\n        this._nodes = [];\n    }\n    get count() {\n        return this._nodes.length;\n    }\n    get keys() {\n        return this._nodes.map(n => n.key);\n    }\n    get values() {\n        return this._nodes.map(n => n.value);\n    }\n    _moveUp(originalIndex) {\n        let index = originalIndex;\n        const node = this._nodes[index];\n        while (index > 0) {\n            const parentIndex = this._parentIndex(index);\n            if (this._nodes[parentIndex].key > node.key) {\n                this._nodes[index] = this._nodes[parentIndex];\n                index = parentIndex;\n                continue;\n            }\n            break;\n        }\n        this._nodes[index] = node;\n    }\n    _moveDown(originalIndex) {\n        let index = originalIndex;\n        const node = this._nodes[index];\n        const halfCount = this.count >> 1;\n        while (index < halfCount) {\n            const leftChild = this._leftChildIndex(index);\n            const rightChild = this._rightChildIndex(index);\n            const nextPath = rightChild < this.count && this._nodes[rightChild].key < this._nodes[leftChild].key\n                ? rightChild\n                : leftChild;\n            if (this._nodes[nextPath].key > node.key) {\n                break;\n            }\n            this._nodes[index] = this._nodes[nextPath];\n            index = nextPath;\n        }\n        this._nodes[index] = node;\n    }\n    _parentIndex(index) {\n        return (index - 1) >> 1;\n    }\n    _leftChildIndex(index) {\n        return index * 2 + 1;\n    }\n    _rightChildIndex(index) {\n        return index * 2 + 2;\n    }\n    _insertAll(heap) {\n        if (!(heap instanceof MinHeap)) {\n            throw new Error('Only heap instance can be inserted');\n        }\n        this._insertAllFromHeap(heap);\n    }\n    _insertAllFromHeap(heap) {\n        const { keys, values } = heap;\n        if (this.count <= 0) {\n            for (let i = 0; i < heap.count; i += 1) {\n                this._nodes.push(new node_1.Node(keys[i], values[i]));\n            }\n            return;\n        }\n        for (let i = 0; i < heap.count; i += 1) {\n            this.push(keys[i], values[i]);\n        }\n    }\n}\nexports.MinHeap = MinHeap;\n//# sourceMappingURL=min_heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Node = void 0;\nclass Node {\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    clone() {\n        return new Node(this.key, this.value);\n    }\n}\nexports.Node = Node;\n//# sourceMappingURL=node.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objects = exports.jobHandlers = exports.dataStructures = void 0;\nexports.dataStructures = require(\"./data_structures\");\nexports.jobHandlers = require(\"./job_handlers\");\nexports.objects = require(\"./objects\");\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./mutex\"), exports);\n__exportStar(require(\"./scheduler\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mutex = void 0;\nclass Mutex {\n    constructor() {\n        this._queue = [];\n        this._locked = false;\n    }\n    async acquire() {\n        const isLocked = this.isLocked();\n        const releaseFunc = new Promise(resolve => this._queue.push(resolve));\n        if (!isLocked) {\n            this._tick();\n        }\n        return releaseFunc;\n    }\n    isLocked() {\n        return this._locked;\n    }\n    async runExclusive(worker) {\n        const release = await this.acquire();\n        try {\n            return await worker();\n        }\n        finally {\n            release();\n        }\n    }\n    _tick() {\n        const releaseFunc = this._queue.shift();\n        if (!releaseFunc) {\n            return;\n        }\n        const nextReleaseFunc = () => {\n            this._locked = false;\n            this._tick();\n        };\n        this._locked = true;\n        releaseFunc(nextReleaseFunc);\n    }\n}\nexports.Mutex = Mutex;\n//# sourceMappingURL=mutex.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scheduler = void 0;\nclass Scheduler {\n    constructor(job, interval) {\n        this._active = false;\n        this._interval = interval;\n        this._job = job;\n    }\n    async start() {\n        if (!this._active) {\n            this._active = true;\n            return this.run();\n        }\n    }\n    stop() {\n        if (this._active && this._id !== undefined) {\n            clearTimeout(this._id);\n            this._id = undefined;\n            this._active = false;\n        }\n    }\n    async callJobAfterTimeout() {\n        return new Promise(resolve => {\n            this._id = setTimeout(async () => {\n                await this._job();\n                resolve();\n            }, this._interval);\n        });\n    }\n    async run() {\n        while (this._active) {\n            await this.callJobAfterTimeout();\n        }\n    }\n}\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=scheduler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferArrayUniqueItems = exports.bufferArrayOrderByLex = exports.bufferArraySubtract = exports.bufferArrayEqual = exports.bufferArrayContainsSome = exports.bufferArrayContains = exports.bufferArrayIncludes = void 0;\nconst buffer_set_1 = require(\"../data_structures/buffer_set\");\nconst bufferArrayIncludes = (arr, val) => arr.find(a => a.equals(val)) !== undefined;\nexports.bufferArrayIncludes = bufferArrayIncludes;\nconst bufferArrayContains = (arr1, arr2) => arr2.every(val => exports.bufferArrayIncludes(arr1, val));\nexports.bufferArrayContains = bufferArrayContains;\nconst bufferArrayContainsSome = (arr1, arr2) => arr2.some(val => exports.bufferArrayIncludes(arr1, val));\nexports.bufferArrayContainsSome = bufferArrayContainsSome;\nconst bufferArrayEqual = (arr1, arr2) => arr1.length === arr2.length && arr1.every((val, index) => val.equals(arr2[index]));\nexports.bufferArrayEqual = bufferArrayEqual;\nconst bufferArraySubtract = (arr1, arr2) => arr1.filter(a => !exports.bufferArrayIncludes(arr2, a));\nexports.bufferArraySubtract = bufferArraySubtract;\nconst bufferArrayOrderByLex = (arr1) => {\n    const sortedArray = [...arr1];\n    sortedArray.sort((a, b) => a.compare(b));\n    return exports.bufferArrayEqual(arr1, sortedArray);\n};\nexports.bufferArrayOrderByLex = bufferArrayOrderByLex;\nconst bufferArrayUniqueItems = (arr1) => arr1.length === new buffer_set_1.BufferSet([...arr1]).size;\nexports.bufferArrayUniqueItems = bufferArrayUniqueItems;\n//# sourceMappingURL=buffer_array.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneDeep = void 0;\nconst cloneDeep = require(\"lodash.clonedeep\");\nexports.cloneDeep = cloneDeep;\n__exportStar(require(\"./buffer_array\"), exports);\n__exportStar(require(\"./merge_deep\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeDeep = void 0;\nconst isIterable = (item) => typeof item === 'object' && item !== null && !Array.isArray(item) && !Buffer.isBuffer(item);\nconst mergeDeep = (dest, ...srcs) => {\n    const result = dest;\n    if (!isIterable(result)) {\n        return result;\n    }\n    for (const src of srcs) {\n        for (const key in src) {\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                exports.mergeDeep(result[key], src[key]);\n            }\n            else if (src[key] !== undefined && src[key] !== null) {\n                result[key] = src[key];\n            }\n        }\n    }\n    return result;\n};\nexports.mergeDeep = mergeDeep;\n//# sourceMappingURL=merge_deep.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MIN_SINT64 = exports.MAX_SINT64 = exports.MAX_UINT64 = exports.MAX_UINT32 = exports.MIN_SINT32 = exports.MAX_SINT32 = void 0;\nexports.MAX_SINT32 = 2147483647;\nexports.MIN_SINT32 = exports.MAX_SINT32 * -1;\nexports.MAX_UINT32 = 4294967295;\nexports.MAX_UINT64 = BigInt('18446744073709551615');\nexports.MAX_SINT64 = BigInt('9223372036854775807');\nexports.MIN_SINT64 = exports.MAX_SINT64 * BigInt(-1) - BigInt(1);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LiskValidationError = exports.convertErrorsToLegacyFormat = void 0;\nconst errorParamToString = (param) => {\n    let paramAsString = '';\n    if (typeof param === 'bigint') {\n        paramAsString = param.toString();\n    }\n    else if (Buffer.isBuffer(param)) {\n        paramAsString = param.toString('hex');\n    }\n    else if (param === undefined) {\n        paramAsString = '';\n    }\n    else {\n        paramAsString = param;\n    }\n    return paramAsString;\n};\nconst convertErrorsToLegacyFormat = (errors) => errors.map(e => {\n    var _a, _b;\n    const err = e;\n    err.dataPath = (_a = err.dataPath) !== null && _a !== void 0 ? _a : instancePathToLegacyDataPath((_b = err.instancePath) !== null && _b !== void 0 ? _b : '');\n    delete err.instancePath;\n    return err;\n});\nexports.convertErrorsToLegacyFormat = convertErrorsToLegacyFormat;\nconst instancePathToLegacyDataPath = (path) => path.split('/').join('.');\nconst errorFormatterMap = {\n    type: error => {\n        var _a;\n        return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' should be of type '${errorParamToString(error.params.type)}'`;\n    },\n    additionalProperties: error => {\n        var _a;\n        return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' has extraneous property '${errorParamToString(error.params.additionalProperty)}'`;\n    },\n    minLength: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    maxLength: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    format: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n    required: error => `Missing property, ${errorParamToString(error.message)}`,\n    dataType: error => { var _a; return `Property '${(_a = error.dataPath) !== null && _a !== void 0 ? _a : ''}' ${errorParamToString(error.message)}`; },\n};\nconst defaultErrorFormatter = error => { var _a; return (_a = error.message) !== null && _a !== void 0 ? _a : 'Unspecified validator error'; };\nconst errorFormatter = (error) => { var _a; return ((_a = errorFormatterMap[error.keyword]) !== null && _a !== void 0 ? _a : defaultErrorFormatter)(error); };\nclass LiskValidationError extends Error {\n    constructor(errors) {\n        super();\n        this.errors = exports.convertErrorsToLegacyFormat(errors);\n        this.message = `Lisk validator found ${this.errors.length} error[s]:\\n${this._compileErrors().join('\\n')}`;\n    }\n    _compileErrors() {\n        const errorMsgs = this.errors.map(errorFormatter);\n        return errorMsgs;\n    }\n}\nexports.LiskValidationError = LiskValidationError;\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.oddInteger = exports.ipOrFQDN = exports.ip = exports.encryptedPassphrase = exports.path = exports.networkVersion = exports.version = exports.camelCase = exports.int32 = exports.uint32 = exports.uint64 = exports.int64 = exports.bytes = exports.hex = void 0;\nconst validation_1 = require(\"./validation\");\nexports.hex = validation_1.isHexString;\nexports.bytes = validation_1.isBytes;\nconst int64 = (data) => validation_1.isNumberString(data) && validation_1.isSInt64(BigInt(data));\nexports.int64 = int64;\nconst uint64 = (data) => validation_1.isNumberString(data) && validation_1.isUInt64(BigInt(data));\nexports.uint64 = uint64;\nconst uint32 = (data) => validation_1.isNumberString(data) && validation_1.isUInt32(Number(data));\nexports.uint32 = uint32;\nconst int32 = (data) => validation_1.isNumberString(data) && validation_1.isSInt32(Number(data));\nexports.int32 = int32;\nconst camelCaseRegex = /^[a-z]+((\\d)|([A-Z0-9][a-zA-Z0-9]+))*([a-z0-9A-Z])?$/;\nconst camelCase = (data) => camelCaseRegex.exec(data) !== null;\nexports.camelCase = camelCase;\nexports.version = validation_1.isSemVer;\nconst networkVersion = (data) => /^(\\d|[1-9]\\d{1,2})\\.(\\d|[1-9]\\d{1,2})$/.test(data);\nexports.networkVersion = networkVersion;\nconst path = (data) => /^(.?)(\\/[^/]+)+(\\/?)$/.test(data);\nexports.path = path;\nexports.encryptedPassphrase = validation_1.isEncryptedPassphrase;\nexports.ip = validation_1.isIP;\nconst ipOrFQDN = (data) => {\n    const hostnameRegex = /^[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?(\\.[a-zA-Z](([-0-9a-zA-Z]+)?[0-9a-zA-Z])?)*$/;\n    return validation_1.isIPV4(data) || hostnameRegex.test(data);\n};\nexports.ipOrFQDN = ipOrFQDN;\nconst oddInteger = (data) => {\n    if (typeof data === 'number') {\n        return Number.isInteger(data) && data % 2 === 1;\n    }\n    return /^\\d*[13579]$/.test(data);\n};\nexports.oddInteger = oddInteger;\n//# sourceMappingURL=formats.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.liskSchemaIdentifier = exports.validator = void 0;\nconst lisk_validator_1 = require(\"./lisk_validator\");\nObject.defineProperty(exports, \"validator\", { enumerable: true, get: function () { return lisk_validator_1.validator; } });\nObject.defineProperty(exports, \"liskSchemaIdentifier\", { enumerable: true, get: function () { return lisk_validator_1.liskSchemaIdentifier; } });\n__exportStar(require(\"./validation\"), exports);\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dataTypeKeyword = exports.metaSchema = void 0;\nconst createDebug = require(\"debug\");\nconst errors_1 = require(\"../errors\");\nconst validation_1 = require(\"../validation\");\nconst debug = createDebug('codec:keyword:dataType');\nexports.metaSchema = {\n    title: 'Lisk Codec Data Type',\n    type: 'string',\n    enum: ['bytes', 'uint32', 'sint32', 'uint64', 'sint64', 'string', 'boolean'],\n};\nconst compile = (value, parentSchema, it) => {\n    var _a;\n    debug('compile: value: %s', value);\n    debug('compile: parent schema: %j', parentSchema);\n    const typePropertyPresent = Object.keys(parentSchema).includes('type');\n    if (typePropertyPresent) {\n        throw new errors_1.LiskValidationError([\n            {\n                keyword: 'dataType',\n                message: 'Either \"dataType\" or \"type\" can be presented in schema',\n                params: { dataType: value },\n                dataPath: '',\n                schemaPath: (_a = it.schemaPath.str) !== null && _a !== void 0 ? _a : '',\n            },\n        ]);\n    }\n    const validate = (data, _dataCxt) => {\n        if (value === 'boolean') {\n            return validation_1.isBoolean(data);\n        }\n        if (value === 'bytes') {\n            if (!validation_1.isBytes(data)) {\n                return false;\n            }\n            const parent = parentSchema;\n            if (typeof parent.minLength === 'number') {\n                const { length } = data;\n                if (length < parent.minLength) {\n                    validate.errors = [\n                        {\n                            keyword: 'dataType',\n                            message: 'minLength not satisfied',\n                            params: { dataType: value, minLength: parent.minLength, length },\n                        },\n                    ];\n                    return false;\n                }\n            }\n            if (typeof parent.maxLength === 'number') {\n                const { length } = data;\n                if (length > parent.maxLength) {\n                    validate.errors = [\n                        {\n                            keyword: 'dataType',\n                            message: 'maxLength exceeded',\n                            params: { dataType: value, maxLength: parent.maxLength, length },\n                        },\n                    ];\n                    return false;\n                }\n            }\n        }\n        if (value === 'string') {\n            return validation_1.isString(data);\n        }\n        if (value === 'uint32') {\n            return validation_1.isUInt32(data);\n        }\n        if (value === 'uint64') {\n            return validation_1.isUInt64(data);\n        }\n        if (value === 'sint32') {\n            return validation_1.isSInt32(data);\n        }\n        if (value === 'sint64') {\n            return validation_1.isSInt64(data);\n        }\n        return true;\n    };\n    return validate;\n};\nexports.dataTypeKeyword = {\n    keyword: 'dataType',\n    compile,\n    errors: 'full',\n    modifying: false,\n    metaSchema: exports.metaSchema,\n};\n//# sourceMappingURL=data_type.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fieldNumberKeyword = exports.metaSchema = void 0;\nconst createDebug = require(\"debug\");\nconst errors_1 = require(\"../errors\");\nconst debug = createDebug('codec:keyword:fieldNumber');\nexports.metaSchema = {\n    title: 'Lisk Codec Field Number',\n    type: 'number',\n    minimum: 1,\n    maximum: 18999,\n};\nconst deepValue = (obj, path) => {\n    const parts = path.split('.');\n    const len = parts.length;\n    let result = obj;\n    for (let i = 0; i < len; i += 1) {\n        result = result[parts[i]];\n    }\n    return result;\n};\nconst compile = (value, parentSchema, it) => {\n    debug('compile: schema: %i', value);\n    debug('compile: parent schema: %j', parentSchema);\n    const { schemaPath, schemaEnv: { root: { schema: rootSchema }, }, } = it;\n    const parentPath = schemaPath.str.split('.');\n    parentPath.shift();\n    parentPath.pop();\n    const parentSchemaObject = deepValue(rootSchema, parentPath.join('.'));\n    const fieldNumbers = Object.keys(parentSchemaObject).map((key) => parentSchemaObject[key].fieldNumber);\n    const uniqueFieldNumbers = [...new Set(fieldNumbers)];\n    if (fieldNumbers.length !== uniqueFieldNumbers.length) {\n        throw new errors_1.LiskValidationError([\n            {\n                keyword: 'fieldNumber',\n                message: 'Value must be unique across all properties on same level',\n                params: { fieldNumbers },\n                dataPath: '',\n                schemaPath: schemaPath.str,\n            },\n        ]);\n    }\n    return (_data, _dataCxt) => true;\n};\nexports.fieldNumberKeyword = {\n    keyword: 'fieldNumber',\n    compile,\n    valid: true,\n    errors: false,\n    modifying: false,\n    metaSchema: exports.metaSchema,\n};\n//# sourceMappingURL=field_number.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.liskMetaSchema = void 0;\nexports.liskMetaSchema = {\n    $schema: 'http://json-schema.org/draft-07/schema#',\n    $id: 'http://lisk.io/lisk-schema/schema#',\n    title: 'Lisk Schema',\n    type: 'object',\n    properties: {\n        $schema: {\n            type: 'string',\n            const: 'http://lisk.io/lisk-schema/schema#',\n            format: 'uri',\n        },\n        $id: {\n            type: 'string',\n            format: 'uri-reference',\n        },\n        title: {\n            type: 'string',\n        },\n        type: {\n            type: 'string',\n            const: 'object',\n        },\n        properties: {\n            type: 'object',\n            propertyNames: {\n                type: 'string',\n                format: 'camelCase',\n            },\n            additionalProperties: {\n                anyOf: [\n                    {\n                        $ref: '#/definitions/schema',\n                    },\n                    {\n                        type: 'object',\n                        properties: {\n                            type: {\n                                type: 'string',\n                                enum: ['array', 'object'],\n                            },\n                        },\n                    },\n                ],\n            },\n            minProperties: 1,\n        },\n        required: {\n            type: 'array',\n            items: {\n                type: 'string',\n            },\n            uniqueItems: true,\n        },\n    },\n    required: ['$id', '$schema', 'type', 'properties'],\n    additionalProperties: false,\n    definitions: {\n        schema: {\n            allOf: [{ $ref: 'http://json-schema.org/draft-07/schema#' }],\n        },\n    },\n};\n//# sourceMappingURL=lisk_meta_schema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validator = exports.liskSchemaIdentifier = void 0;\nconst ajv_1 = require(\"ajv\");\nconst ajv_formats_1 = require(\"ajv-formats\");\nconst formats = require(\"./formats\");\nconst errors_1 = require(\"./errors\");\nconst field_number_1 = require(\"./keywords/field_number\");\nconst data_type_1 = require(\"./keywords/data_type\");\nconst lisk_meta_schema_1 = require(\"./lisk_meta_schema\");\nexports.liskSchemaIdentifier = lisk_meta_schema_1.liskMetaSchema.$id;\nclass LiskValidator {\n    constructor() {\n        this._validator = new ajv_1.default({\n            strict: true,\n            strictSchema: true,\n            allErrors: true,\n            useDefaults: false,\n            addUsedSchema: false,\n            strictTypes: false,\n        });\n        ajv_formats_1.default(this._validator);\n        for (const formatName of Object.keys(formats)) {\n            this._validator.addFormat(formatName, formats[formatName]);\n        }\n        this._validator.addKeyword({\n            keyword: 'uniqueSignedPublicKeys',\n            type: 'array',\n            compile: () => (data) => new Set(data.filter(datum => typeof datum === 'string').map((key) => key.slice(1)))\n                .size === data.length,\n        });\n        this._validator.compile(lisk_meta_schema_1.liskMetaSchema);\n        this._validator.addMetaSchema(lisk_meta_schema_1.liskMetaSchema);\n        this._validator.addKeyword(field_number_1.fieldNumberKeyword);\n        this._validator.addKeyword(data_type_1.dataTypeKeyword);\n    }\n    validate(schema, data) {\n        if (!this._validator.validate(schema, data)) {\n            return errors_1.convertErrorsToLegacyFormat(this._validator.errors);\n        }\n        return [];\n    }\n    validateSchema(schema) {\n        if (!this._validator.validateSchema(schema)) {\n            return errors_1.convertErrorsToLegacyFormat(this._validator.errors);\n        }\n        return [];\n    }\n    compile(schema) {\n        try {\n            return this._validator.compile(schema);\n        }\n        catch (error) {\n            if (error instanceof errors_1.LiskValidationError) {\n                throw error;\n            }\n            throw new errors_1.LiskValidationError([\n                {\n                    message: error.message.toString(),\n                    dataPath: '',\n                    keyword: '',\n                    schemaPath: '',\n                    params: {},\n                },\n            ]);\n        }\n    }\n    removeSchema(schemaKeyRef) {\n        return this._validator.removeSchema(schemaKeyRef);\n    }\n}\nexports.validator = new LiskValidator();\n//# sourceMappingURL=lisk_validator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCsv = exports.isVersionMatch = exports.isStringEndsWith = exports.isPort = exports.isIP = exports.isIPV6 = exports.isIPV4 = exports.isProtocolString = exports.isGreaterThanRangedVersion = exports.isLessThanRangedVersion = exports.isRangedSemVer = exports.isSemVer = exports.isEncryptedPassphrase = exports.isHexString = exports.isValidInteger = exports.isBytes = exports.isUInt64 = exports.isSInt64 = exports.isUInt32 = exports.isSInt32 = exports.isBoolean = exports.isString = exports.isNumberString = void 0;\nconst semver_1 = require(\"semver\");\nconst validator_1 = require(\"validator\");\nconst constants_1 = require(\"./constants\");\nconst isNumberString = (num) => {\n    if (typeof num !== 'string') {\n        return false;\n    }\n    return validator_1.default.isInt(num);\n};\nexports.isNumberString = isNumberString;\nconst isString = (data) => typeof data === 'string';\nexports.isString = isString;\nconst isBoolean = (data) => typeof data === 'boolean';\nexports.isBoolean = isBoolean;\nconst isSInt32 = (data) => {\n    if (typeof data === 'number' && Number.isInteger(data)) {\n        return data <= constants_1.MAX_SINT32 && data >= constants_1.MIN_SINT32;\n    }\n    return false;\n};\nexports.isSInt32 = isSInt32;\nconst isUInt32 = (data) => {\n    if (typeof data === 'number' && Number.isInteger(data)) {\n        return data <= constants_1.MAX_UINT32 && data >= 0;\n    }\n    return false;\n};\nexports.isUInt32 = isUInt32;\nconst isSInt64 = (data) => typeof data === 'bigint' ? data <= constants_1.MAX_SINT64 && data >= constants_1.MIN_SINT64 : false;\nexports.isSInt64 = isSInt64;\nconst isUInt64 = (data) => typeof data === 'bigint' ? data <= constants_1.MAX_UINT64 && data >= BigInt(0) : false;\nexports.isUInt64 = isUInt64;\nconst isBytes = (data) => Buffer.isBuffer(data);\nexports.isBytes = isBytes;\nconst isValidInteger = (num) => typeof num === 'number' ? Math.floor(num) === num : false;\nexports.isValidInteger = isValidInteger;\nconst isHexString = (data) => {\n    if (typeof data !== 'string') {\n        return false;\n    }\n    return data === '' || /^[a-f0-9]+$/i.test(data);\n};\nexports.isHexString = isHexString;\nconst isEncryptedPassphrase = (data) => {\n    const keyRegExp = /[a-zA-Z0-9]{2,15}/;\n    const valueRegExp = /[a-f0-9]{1,512}/;\n    const keyValueRegExp = new RegExp(`${keyRegExp.source}=${valueRegExp.source}`);\n    const encryptedPassphraseRegExp = new RegExp(`^(${keyValueRegExp.source})(?:&(${keyValueRegExp.source})){0,10}$`);\n    return encryptedPassphraseRegExp.test(data);\n};\nexports.isEncryptedPassphrase = isEncryptedPassphrase;\nconst isSemVer = (version) => !!semver_1.valid(version);\nexports.isSemVer = isSemVer;\nconst isRangedSemVer = (version) => !!semver_1.validRange(version);\nexports.isRangedSemVer = isRangedSemVer;\nexports.isLessThanRangedVersion = semver_1.ltr;\nexports.isGreaterThanRangedVersion = semver_1.gtr;\nconst isProtocolString = (data) => /^(\\d|[1-9]\\d{1,2})\\.(\\d|[1-9]\\d{1,2})$/.test(data);\nexports.isProtocolString = isProtocolString;\nconst IPV4_NUMBER = '4';\nconst IPV6_NUMBER = '6';\nconst isIPV4 = (data) => validator_1.default.isIP(data, IPV4_NUMBER);\nexports.isIPV4 = isIPV4;\nconst isIPV6 = (data) => validator_1.default.isIP(data, IPV6_NUMBER);\nexports.isIPV6 = isIPV6;\nconst isIP = (data) => exports.isIPV4(data) || exports.isIPV6(data);\nexports.isIP = isIP;\nconst isPort = (port) => validator_1.default.isPort(port);\nexports.isPort = isPort;\nconst isStringEndsWith = (target, suffixes) => suffixes.some(suffix => target.endsWith(suffix));\nexports.isStringEndsWith = isStringEndsWith;\nexports.isVersionMatch = semver_1.gte;\nconst isCsv = (data) => {\n    if (typeof data !== 'string') {\n        return false;\n    }\n    const csvAsArray = data.split(',');\n    if (csvAsArray.length > 0) {\n        return true;\n    }\n    return false;\n};\nexports.isCsv = isCsv;\n//# sourceMappingURL=validation.js.map"],"sourceRoot":""}